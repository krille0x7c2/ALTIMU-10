   1               		.file	"L3GD20H_GYRO.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 110               	.global	init_gyro
 112               	init_gyro:
   1:L3GD20H_GYRO.c **** /* 
   2:L3GD20H_GYRO.c ****  * File:   L3GD20H_GYRO.c
   3:L3GD20H_GYRO.c ****  * Author: Christian Bodelsson<bodelsson@gmail.com>
   4:L3GD20H_GYRO.c ****  *
   5:L3GD20H_GYRO.c ****  * Created on February 17, 2015, 8:46 AM
   6:L3GD20H_GYRO.c ****  */
   7:L3GD20H_GYRO.c **** //TODO Write documentation
   8:L3GD20H_GYRO.c **** #include <avr/io.h>
   9:L3GD20H_GYRO.c **** #include <util/delay_basic.h>
  10:L3GD20H_GYRO.c **** #include <util/delay.h>
  11:L3GD20H_GYRO.c **** #include "twi_master.h"
  12:L3GD20H_GYRO.c **** #include "L3GD20H_GYRO.h"
  13:L3GD20H_GYRO.c **** #include "ALTIMU_10.h"
  14:L3GD20H_GYRO.c **** #include "timer.h"
  15:L3GD20H_GYRO.c **** 
  16:L3GD20H_GYRO.c **** /*************************************************************************
  17:L3GD20H_GYRO.c ****  Initiate the gyro
  18:L3GD20H_GYRO.c ****  * GYRO_LOW_ODR: LOW ODR DISABLED
  19:L3GD20H_GYRO.c ****  * GYRO_CTRL4:   +/-250 dps
  20:L3GD20H_GYRO.c ****  * GYRO_CTRL1:   [[DR 01 200Hz ODR],[BW 10 50Hz bandwidth],[PD 1 normal mode],[Zen=Yen=Xen=1 all ax
  21:L3GD20H_GYRO.c ****  
  22:L3GD20H_GYRO.c ****  *************************************************************************/
  23:L3GD20H_GYRO.c **** 
  24:L3GD20H_GYRO.c **** void init_gyro(void) {
 114               	.LM0:
 115               	.LFBB1:
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 0 */
 119               	.L__stack_usage = 0
  25:L3GD20H_GYRO.c **** 
  26:L3GD20H_GYRO.c ****     write_to_reg(GYRO_SLAVE_ADDRESS, GYRO_LOW_ODR, 0x00);
 121               	.LM1:
 122 0000 40E0      		ldi r20,0
 123 0002 69E3      		ldi r22,lo8(57)
 124 0004 8BE6      		ldi r24,lo8(107)
 125 0006 0E94 0000 		call write_to_reg
  27:L3GD20H_GYRO.c ****     write_to_reg(GYRO_SLAVE_ADDRESS, GYRO_CTRL4, 0x00);
 127               	.LM2:
 128 000a 40E0      		ldi r20,0
 129 000c 63E2      		ldi r22,lo8(35)
 130 000e 8BE6      		ldi r24,lo8(107)
 131 0010 0E94 0000 		call write_to_reg
  28:L3GD20H_GYRO.c ****     write_to_reg(GYRO_SLAVE_ADDRESS, GYRO_CTRL1, 0x6F);
 133               	.LM3:
 134 0014 4FE6      		ldi r20,lo8(111)
 135 0016 60E2      		ldi r22,lo8(32)
 136 0018 8BE6      		ldi r24,lo8(107)
 137 001a 0C94 0000 		jmp write_to_reg
 139               	.Lscope1:
 142               	.global	read_gyro_values
 144               	read_gyro_values:
  29:L3GD20H_GYRO.c **** }/*init_gyro*/
  30:L3GD20H_GYRO.c **** 
  31:L3GD20H_GYRO.c **** //TODO
  32:L3GD20H_GYRO.c **** 
  33:L3GD20H_GYRO.c **** /*************************************************************************
  34:L3GD20H_GYRO.c ****  Read the raw values from all three axis. 16-bit resolution
  35:L3GD20H_GYRO.c ****  
  36:L3GD20H_GYRO.c ****  Input: Pointer to data structure, passed by reference.
  37:L3GD20H_GYRO.c ****  
  38:L3GD20H_GYRO.c ****  *************************************************************************/
  39:L3GD20H_GYRO.c **** void read_gyro_values(struct gyro_data *_gyro_data_) {
 146               	.LM4:
 147               	.LFBB2:
 148 001e DF92      		push r13
 149 0020 EF92      		push r14
 150 0022 FF92      		push r15
 151 0024 0F93      		push r16
 152 0026 1F93      		push r17
 153 0028 CF93      		push r28
 154 002a DF93      		push r29
 155               	/* prologue: function */
 156               	/* frame size = 0 */
 157               	/* stack size = 7 */
 158               	.L__stack_usage = 7
 159 002c 8C01      		movw r16,r24
  40:L3GD20H_GYRO.c **** 
  41:L3GD20H_GYRO.c ****     timer1_init();
 161               	.LM5:
 162 002e 0E94 0000 		call timer1_init
 163               	.L3:
  42:L3GD20H_GYRO.c ****     while(TCNT1<DELAY_20M);
 165               	.LM6:
 166 0032 8091 8400 		lds r24,132
 167 0036 9091 8500 		lds r25,132+1
 168 003a 8F33      		cpi r24,63
 169 003c 9C49      		sbci r25,-100
 170 003e 00F0      		brlo .L3
  43:L3GD20H_GYRO.c ****         if (i2c_start(GYRO_SLAVE_ADDRESS << 1) == 0) {
 172               	.LM7:
 173 0040 86ED      		ldi r24,lo8(-42)
 174 0042 0E94 0000 		call i2c_start
 175 0046 8111      		cpse r24,__zero_reg__
 176 0048 00C0      		rjmp .L2
  44:L3GD20H_GYRO.c ****             i2c_write(GYRO_OUT_X_L | (1 << 7)); //Auto increment registers by writing the MSB high
 178               	.LM8:
 179 004a 88EA      		ldi r24,lo8(-88)
 180 004c 0E94 0000 		call i2c_write
  45:L3GD20H_GYRO.c **** 
  46:L3GD20H_GYRO.c ****             if (i2c_rep_start(((uint8_t) GYRO_SLAVE_ADDRESS << 1) | 1) == 0) {
 182               	.LM9:
 183 0050 87ED      		ldi r24,lo8(-41)
 184 0052 0E94 0000 		call i2c_rep_start
 185 0056 8111      		cpse r24,__zero_reg__
 186 0058 00C0      		rjmp .L2
 187               	.LBB2:
  47:L3GD20H_GYRO.c ****                 uint8_t xlg = i2c_read(ACK);
 189               	.LM10:
 190 005a 0E94 0000 		call i2c_readAck
 191 005e F82E      		mov r15,r24
  48:L3GD20H_GYRO.c ****                 uint8_t xhg = i2c_read(ACK);
 193               	.LM11:
 194 0060 0E94 0000 		call i2c_readAck
 195 0064 D82E      		mov r13,r24
  49:L3GD20H_GYRO.c **** 
  50:L3GD20H_GYRO.c ****                 uint8_t ylg = i2c_read(ACK);
 197               	.LM12:
 198 0066 0E94 0000 		call i2c_readAck
 199 006a D82F      		mov r29,r24
  51:L3GD20H_GYRO.c ****                 uint8_t yhg = i2c_read(ACK);
 201               	.LM13:
 202 006c 0E94 0000 		call i2c_readAck
 203 0070 E82E      		mov r14,r24
  52:L3GD20H_GYRO.c **** 
  53:L3GD20H_GYRO.c ****                 uint8_t zlg = i2c_read(ACK);
 205               	.LM14:
 206 0072 0E94 0000 		call i2c_readAck
 207 0076 C82F      		mov r28,r24
  54:L3GD20H_GYRO.c ****                 uint8_t zhg = i2c_read(NAK);
 209               	.LM15:
 210 0078 0E94 0000 		call i2c_readNak
  55:L3GD20H_GYRO.c **** 
  56:L3GD20H_GYRO.c ****                 _gyro_data_->x = (int16_t) (xhg << 8 | xlg);
 212               	.LM16:
 213 007c 2F2D      		mov r18,r15
 214 007e 30E0      		ldi r19,0
 215 0080 3D29      		or r19,r13
 216 0082 F801      		movw r30,r16
 217 0084 3183      		std Z+1,r19
 218 0086 2083      		st Z,r18
  57:L3GD20H_GYRO.c ****                 _gyro_data_->y = (int16_t) (yhg << 8 | ylg);
 220               	.LM17:
 221 0088 2D2F      		mov r18,r29
 222 008a 30E0      		ldi r19,0
 223 008c 3E29      		or r19,r14
 224 008e 3383      		std Z+3,r19
 225 0090 2283      		std Z+2,r18
  58:L3GD20H_GYRO.c ****                 _gyro_data_->z = (int16_t) (zhg << 8 | zlg);
 227               	.LM18:
 228 0092 2C2F      		mov r18,r28
 229 0094 30E0      		ldi r19,0
 230 0096 382B      		or r19,r24
 231 0098 3583      		std Z+5,r19
 232 009a 2483      		std Z+4,r18
 233               	.L2:
 234               	/* epilogue start */
 235               	.LBE2:
  59:L3GD20H_GYRO.c **** 
  60:L3GD20H_GYRO.c ****             }
  61:L3GD20H_GYRO.c ****         }
  62:L3GD20H_GYRO.c ****     
  63:L3GD20H_GYRO.c **** }/*read_gyro_values*/
 237               	.LM19:
 238 009c DF91      		pop r29
 239 009e CF91      		pop r28
 240 00a0 1F91      		pop r17
 241 00a2 0F91      		pop r16
 242 00a4 FF90      		pop r15
 243 00a6 EF90      		pop r14
 244 00a8 DF90      		pop r13
 245 00aa 0895      		ret
 254               	.Lscope2:
 255               	.global	__floatsisf
 256               	.global	__mulsf3
 260               	.global	read_gyro_values_rate_dps
 262               	read_gyro_values_rate_dps:
  64:L3GD20H_GYRO.c **** 
  65:L3GD20H_GYRO.c **** void read_gyro_values_rate_dps(struct gyro_data *_gyro_data_, struct gyro_data_dps *gyro_data_dps) 
 264               	.LM20:
 265               	.LFBB3:
 266 00ac 0F93      		push r16
 267 00ae 1F93      		push r17
 268 00b0 CF93      		push r28
 269 00b2 DF93      		push r29
 270               	/* prologue: function */
 271               	/* frame size = 0 */
 272               	/* stack size = 4 */
 273               	.L__stack_usage = 4
 274 00b4 8C01      		movw r16,r24
 275 00b6 EB01      		movw r28,r22
  66:L3GD20H_GYRO.c ****     gyro_data_dps->x = (float) _gyro_data_->x * G_GAIN;
 277               	.LM21:
 278 00b8 FC01      		movw r30,r24
 279 00ba 6081      		ld r22,Z
 280 00bc 7181      		ldd r23,Z+1
 281 00be 8827      		clr r24
 282 00c0 77FD      		sbrc r23,7
 283 00c2 8095      		com r24
 284 00c4 982F      		mov r25,r24
 285 00c6 0E94 0000 		call __floatsisf
 286 00ca 29E2      		ldi r18,lo8(41)
 287 00cc 3CE5      		ldi r19,lo8(92)
 288 00ce 4FE0      		ldi r20,lo8(15)
 289 00d0 5CE3      		ldi r21,lo8(60)
 290 00d2 0E94 0000 		call __mulsf3
 291 00d6 6883      		st Y,r22
 292 00d8 7983      		std Y+1,r23
 293 00da 8A83      		std Y+2,r24
 294 00dc 9B83      		std Y+3,r25
  67:L3GD20H_GYRO.c ****     gyro_data_dps->y = (float) _gyro_data_->y * G_GAIN;
 296               	.LM22:
 297 00de F801      		movw r30,r16
 298 00e0 6281      		ldd r22,Z+2
 299 00e2 7381      		ldd r23,Z+3
 300 00e4 8827      		clr r24
 301 00e6 77FD      		sbrc r23,7
 302 00e8 8095      		com r24
 303 00ea 982F      		mov r25,r24
 304 00ec 0E94 0000 		call __floatsisf
 305 00f0 29E2      		ldi r18,lo8(41)
 306 00f2 3CE5      		ldi r19,lo8(92)
 307 00f4 4FE0      		ldi r20,lo8(15)
 308 00f6 5CE3      		ldi r21,lo8(60)
 309 00f8 0E94 0000 		call __mulsf3
 310 00fc 6C83      		std Y+4,r22
 311 00fe 7D83      		std Y+5,r23
 312 0100 8E83      		std Y+6,r24
 313 0102 9F83      		std Y+7,r25
  68:L3GD20H_GYRO.c ****     gyro_data_dps->z = (float) _gyro_data_->z * G_GAIN;
 315               	.LM23:
 316 0104 F801      		movw r30,r16
 317 0106 6481      		ldd r22,Z+4
 318 0108 7581      		ldd r23,Z+5
 319 010a 8827      		clr r24
 320 010c 77FD      		sbrc r23,7
 321 010e 8095      		com r24
 322 0110 982F      		mov r25,r24
 323 0112 0E94 0000 		call __floatsisf
 324 0116 29E2      		ldi r18,lo8(41)
 325 0118 3CE5      		ldi r19,lo8(92)
 326 011a 4FE0      		ldi r20,lo8(15)
 327 011c 5CE3      		ldi r21,lo8(60)
 328 011e 0E94 0000 		call __mulsf3
 329 0122 6887      		std Y+8,r22
 330 0124 7987      		std Y+9,r23
 331 0126 8A87      		std Y+10,r24
 332 0128 9B87      		std Y+11,r25
 333               	/* epilogue start */
  69:L3GD20H_GYRO.c **** 
  70:L3GD20H_GYRO.c **** }/*read_gyro_values_dps*/
 335               	.LM24:
 336 012a DF91      		pop r29
 337 012c CF91      		pop r28
 338 012e 1F91      		pop r17
 339 0130 0F91      		pop r16
 340 0132 0895      		ret
 342               	.Lscope3:
 346               	.global	read_gyro_values_angle
 348               	read_gyro_values_angle:
  71:L3GD20H_GYRO.c **** 
  72:L3GD20H_GYRO.c **** void read_gyro_values_angle(struct gyro_data_dps *_gyro_data_dps, struct gyro_data_angle *gyro_data
 350               	.LM25:
 351               	.LFBB4:
 352 0134 0F93      		push r16
 353 0136 1F93      		push r17
 354 0138 CF93      		push r28
 355 013a DF93      		push r29
 356               	/* prologue: function */
 357               	/* frame size = 0 */
 358               	/* stack size = 4 */
 359               	.L__stack_usage = 4
 360 013c 8C01      		movw r16,r24
 361 013e EB01      		movw r28,r22
  73:L3GD20H_GYRO.c ****     gyro_data_angle->x = _gyro_data_dps->x * LOOP_PERIOD;
 363               	.LM26:
 364 0140 2AE0      		ldi r18,lo8(10)
 365 0142 37ED      		ldi r19,lo8(-41)
 366 0144 43EA      		ldi r20,lo8(-93)
 367 0146 5CE3      		ldi r21,lo8(60)
 368 0148 FC01      		movw r30,r24
 369 014a 6081      		ld r22,Z
 370 014c 7181      		ldd r23,Z+1
 371 014e 8281      		ldd r24,Z+2
 372 0150 9381      		ldd r25,Z+3
 373 0152 0E94 0000 		call __mulsf3
 374 0156 6883      		st Y,r22
 375 0158 7983      		std Y+1,r23
 376 015a 8A83      		std Y+2,r24
 377 015c 9B83      		std Y+3,r25
  74:L3GD20H_GYRO.c ****     gyro_data_angle->y = _gyro_data_dps->y * LOOP_PERIOD;
 379               	.LM27:
 380 015e 2AE0      		ldi r18,lo8(10)
 381 0160 37ED      		ldi r19,lo8(-41)
 382 0162 43EA      		ldi r20,lo8(-93)
 383 0164 5CE3      		ldi r21,lo8(60)
 384 0166 F801      		movw r30,r16
 385 0168 6481      		ldd r22,Z+4
 386 016a 7581      		ldd r23,Z+5
 387 016c 8681      		ldd r24,Z+6
 388 016e 9781      		ldd r25,Z+7
 389 0170 0E94 0000 		call __mulsf3
 390 0174 6C83      		std Y+4,r22
 391 0176 7D83      		std Y+5,r23
 392 0178 8E83      		std Y+6,r24
 393 017a 9F83      		std Y+7,r25
  75:L3GD20H_GYRO.c ****     gyro_data_angle->z = _gyro_data_dps->z * LOOP_PERIOD;
 395               	.LM28:
 396 017c 2AE0      		ldi r18,lo8(10)
 397 017e 37ED      		ldi r19,lo8(-41)
 398 0180 43EA      		ldi r20,lo8(-93)
 399 0182 5CE3      		ldi r21,lo8(60)
 400 0184 F801      		movw r30,r16
 401 0186 6085      		ldd r22,Z+8
 402 0188 7185      		ldd r23,Z+9
 403 018a 8285      		ldd r24,Z+10
 404 018c 9385      		ldd r25,Z+11
 405 018e 0E94 0000 		call __mulsf3
 406 0192 6887      		std Y+8,r22
 407 0194 7987      		std Y+9,r23
 408 0196 8A87      		std Y+10,r24
 409 0198 9B87      		std Y+11,r25
 410               	/* epilogue start */
  76:L3GD20H_GYRO.c **** 
  77:L3GD20H_GYRO.c **** }/*read_gyro_values_angle*/
 412               	.LM29:
 413 019a DF91      		pop r29
 414 019c CF91      		pop r28
 415 019e 1F91      		pop r17
 416 01a0 0F91      		pop r16
 417 01a2 0895      		ret
 419               	.Lscope4:
 421               	.Letext0:
 422               		.ident	"GCC: (GNU) 4.9.2 20141224 (prerelease)"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 L3GD20H_GYRO.c
     /tmp/ccoGkIIv.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccoGkIIv.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccoGkIIv.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccoGkIIv.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccoGkIIv.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccoGkIIv.s:112    .text:0000000000000000 init_gyro
     /tmp/ccoGkIIv.s:144    .text:000000000000001e read_gyro_values
     /tmp/ccoGkIIv.s:262    .text:00000000000000ac read_gyro_values_rate_dps
     /tmp/ccoGkIIv.s:348    .text:0000000000000134 read_gyro_values_angle

UNDEFINED SYMBOLS
write_to_reg
timer1_init
i2c_start
i2c_write
i2c_rep_start
i2c_readAck
i2c_readNak
__floatsisf
__mulsf3
