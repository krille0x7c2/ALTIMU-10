
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00001328  000013bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001328  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  000013bc  2**0
                  ALLOC
  3 .stab         00001e84  00000000  00000000  000013bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000010bd  00000000  00000000  00003240  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000027  00000000  00000000  000042fd  2**0
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  00004324  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  00004918  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001d  00000000  00000000  00004eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00004ed7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
       8:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
       c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      10:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      14:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      18:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      1c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      20:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      24:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      28:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      2c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      30:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      34:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      38:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      3c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      40:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      44:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      48:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      4c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      50:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      54:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      58:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      5c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      60:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
      64:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2240>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_clear_bss>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	01 c0       	rjmp	.+2      	; 0x180 <.do_clear_bss_start>

0000017e <.do_clear_bss_loop>:
     17e:	1d 92       	st	X+, r1

00000180 <.do_clear_bss_start>:
     180:	a6 30       	cpi	r26, 0x06	; 6
     182:	b1 07       	cpc	r27, r17
     184:	e1 f7       	brne	.-8      	; 0x17e <.do_clear_bss_loop>
     186:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <main>
     18a:	0c 94 92 09 	jmp	0x1324	; 0x1324 <_exit>

0000018e <__bad_interrupt>:
     18e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000192 <USART0Init>:
#include "usart.h"
#include <avr/io.h>

void USART0Init(void) {
    // Set baud rate
    UBRR0H = (uint8_t) (UBRR_VALUE >> 8);
     192:	10 92 c5 00 	sts	0x00C5, r1
    UBRR0L = (uint8_t) UBRR_VALUE;
     196:	87 e6       	ldi	r24, 0x67	; 103
     198:	80 93 c4 00 	sts	0x00C4, r24
    // Set frame format to 8 data bits, no parity, 1 stop bit
    UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);
     19c:	e2 ec       	ldi	r30, 0xC2	; 194
     19e:	f0 e0       	ldi	r31, 0x00	; 0
     1a0:	80 81       	ld	r24, Z
     1a2:	86 60       	ori	r24, 0x06	; 6
     1a4:	80 83       	st	Z, r24
    //enable transmission and reception
    UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
     1a6:	e1 ec       	ldi	r30, 0xC1	; 193
     1a8:	f0 e0       	ldi	r31, 0x00	; 0
     1aa:	80 81       	ld	r24, Z
     1ac:	88 61       	ori	r24, 0x18	; 24
     1ae:	80 83       	st	Z, r24
     1b0:	08 95       	ret

000001b2 <USART0SendByte>:
}

int USART0SendByte(char u8Data, FILE *stream) {
     1b2:	cf 93       	push	r28
     1b4:	c8 2f       	mov	r28, r24
    if (u8Data == '\n') {
     1b6:	8a 30       	cpi	r24, 0x0A	; 10
     1b8:	29 f4       	brne	.+10     	; 0x1c4 <USART0SendByte+0x12>
        USART0SendByte('\r', 0);
     1ba:	60 e0       	ldi	r22, 0x00	; 0
     1bc:	70 e0       	ldi	r23, 0x00	; 0
     1be:	8d e0       	ldi	r24, 0x0D	; 13
     1c0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <USART0SendByte>
    }
    //wait while previous byte is completed
    while (!(UCSR0A & (1 << UDRE0))) {
     1c4:	80 91 c0 00 	lds	r24, 0x00C0
     1c8:	85 ff       	sbrs	r24, 5
     1ca:	fc cf       	rjmp	.-8      	; 0x1c4 <USART0SendByte+0x12>
    };
    // Transmit data
    UDR0 = u8Data;
     1cc:	c0 93 c6 00 	sts	0x00C6, r28
    return 0;
}
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <USART0ReceiveByte>:
int USART0ReceiveByte(FILE *stream) {
     1d8:	cf 93       	push	r28
    uint8_t u8Data;
    // Wait for byte to be received
    while (!(UCSR0A & (1 << RXC0))) {
     1da:	20 91 c0 00 	lds	r18, 0x00C0
     1de:	27 ff       	sbrs	r18, 7
     1e0:	fc cf       	rjmp	.-8      	; 0x1da <USART0ReceiveByte+0x2>
    };
    u8Data = UDR0;
     1e2:	c0 91 c6 00 	lds	r28, 0x00C6
    //echo input data
    USART0SendByte(u8Data, stream);
     1e6:	bc 01       	movw	r22, r24
     1e8:	8c 2f       	mov	r24, r28
     1ea:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <USART0SendByte>
    // Return received data
    return u8Data;
}
     1ee:	8c 2f       	mov	r24, r28
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	cf 91       	pop	r28
     1f4:	08 95       	ret

000001f6 <TWIInit>:
#include <compat/twi.h>
#include <util/delay.h>
void TWIInit(void)
{
    //set SCL to 400kHz
    TWSR = 0x00;
     1f6:	10 92 b9 00 	sts	0x00B9, r1
    TWBR = 0x0C;
     1fa:	8c e0       	ldi	r24, 0x0C	; 12
     1fc:	80 93 b8 00 	sts	0x00B8, r24
    //enable TWI
    TWCR = (1<<TWEN);
     200:	84 e0       	ldi	r24, 0x04	; 4
     202:	80 93 bc 00 	sts	0x00BC, r24
     206:	08 95       	ret

00000208 <i2c_start>:
uint8_t i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     208:	94 ea       	ldi	r25, 0xA4	; 164
     20a:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     20e:	90 91 bc 00 	lds	r25, 0x00BC
     212:	97 ff       	sbrs	r25, 7
     214:	fc cf       	rjmp	.-8      	; 0x20e <i2c_start+0x6>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     216:	90 91 b9 00 	lds	r25, 0x00B9
     21a:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     21c:	98 30       	cpi	r25, 0x08	; 8
     21e:	21 f0       	breq	.+8      	; 0x228 <i2c_start+0x20>
     220:	90 31       	cpi	r25, 0x10	; 16
     222:	11 f0       	breq	.+4      	; 0x228 <i2c_start+0x20>
     224:	81 e0       	ldi	r24, 0x01	; 1
     226:	08 95       	ret

	// send device address
	TWDR = address;
     228:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     22c:	84 e8       	ldi	r24, 0x84	; 132
     22e:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     232:	80 91 bc 00 	lds	r24, 0x00BC
     236:	87 ff       	sbrs	r24, 7
     238:	fc cf       	rjmp	.-8      	; 0x232 <i2c_start+0x2a>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     23a:	80 91 b9 00 	lds	r24, 0x00B9
     23e:	88 7f       	andi	r24, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     240:	88 31       	cpi	r24, 0x18	; 24
     242:	11 f0       	breq	.+4      	; 0x248 <i2c_start+0x40>
     244:	80 34       	cpi	r24, 0x40	; 64
     246:	71 f7       	brne	.-36     	; 0x224 <i2c_start+0x1c>

	return 0;
     248:	80 e0       	ldi	r24, 0x00	; 0

}
     24a:	08 95       	ret

0000024c <i2c_start_wait>:


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     24c:	24 ea       	ldi	r18, 0xA4	; 164
    	twst = TW_STATUS & 0xF8;
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
    	TWCR = (1<<TWINT) | (1<<TWEN);
     24e:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     250:	44 e9       	ldi	r20, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     252:	20 93 bc 00 	sts	0x00BC, r18
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     256:	90 91 bc 00 	lds	r25, 0x00BC
     25a:	97 ff       	sbrs	r25, 7
     25c:	fc cf       	rjmp	.-8      	; 0x256 <i2c_start_wait+0xa>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     25e:	90 91 b9 00 	lds	r25, 0x00B9
     262:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     264:	98 30       	cpi	r25, 0x08	; 8
     266:	11 f0       	breq	.+4      	; 0x26c <i2c_start_wait+0x20>
     268:	90 31       	cpi	r25, 0x10	; 16
     26a:	99 f7       	brne	.-26     	; 0x252 <i2c_start_wait+0x6>
    
    	// send device address
    	TWDR = address;
     26c:	80 93 bb 00 	sts	0x00BB, r24
    	TWCR = (1<<TWINT) | (1<<TWEN);
     270:	30 93 bc 00 	sts	0x00BC, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     274:	90 91 bc 00 	lds	r25, 0x00BC
     278:	97 ff       	sbrs	r25, 7
     27a:	fc cf       	rjmp	.-8      	; 0x274 <i2c_start_wait+0x28>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     27c:	90 91 b9 00 	lds	r25, 0x00B9
     280:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     282:	90 32       	cpi	r25, 0x20	; 32
     284:	11 f0       	breq	.+4      	; 0x28a <i2c_start_wait+0x3e>
     286:	98 35       	cpi	r25, 0x58	; 88
     288:	39 f4       	brne	.+14     	; 0x298 <i2c_start_wait+0x4c>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     28a:	40 93 bc 00 	sts	0x00BC, r20
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     28e:	90 91 bc 00 	lds	r25, 0x00BC
     292:	94 fd       	sbrc	r25, 4
     294:	fc cf       	rjmp	.-8      	; 0x28e <i2c_start_wait+0x42>
     296:	dd cf       	rjmp	.-70     	; 0x252 <i2c_start_wait+0x6>
     298:	08 95       	ret

0000029a <i2c_rep_start>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
uint8_t i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     29a:	0c 94 04 01 	jmp	0x208	; 0x208 <i2c_start>

0000029e <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     29e:	84 e9       	ldi	r24, 0x94	; 148
     2a0:	80 93 bc 00 	sts	0x00BC, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     2a4:	80 91 bc 00 	lds	r24, 0x00BC
     2a8:	84 fd       	sbrc	r24, 4
     2aa:	fc cf       	rjmp	.-8      	; 0x2a4 <i2c_stop+0x6>

}
     2ac:	08 95       	ret

000002ae <i2c_write>:
uint8_t i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     2ae:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     2b2:	84 e8       	ldi	r24, 0x84	; 132
     2b4:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     2b8:	80 91 bc 00 	lds	r24, 0x00BC
     2bc:	87 ff       	sbrs	r24, 7
     2be:	fc cf       	rjmp	.-8      	; 0x2b8 <i2c_write+0xa>

	// check value of TWI Status Register. Mask prescaler bits only need the top 5 bits
	twst = TW_STATUS & 0xF8;
     2c0:	90 91 b9 00 	lds	r25, 0x00B9
     2c4:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	98 32       	cpi	r25, 0x28	; 40
     2ca:	09 f4       	brne	.+2      	; 0x2ce <i2c_write+0x20>
     2cc:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}
     2ce:	08 95       	ret

000002d0 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
uint8_t i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     2d0:	84 ec       	ldi	r24, 0xC4	; 196
     2d2:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     2d6:	80 91 bc 00 	lds	r24, 0x00BC
     2da:	87 ff       	sbrs	r24, 7
     2dc:	fc cf       	rjmp	.-8      	; 0x2d6 <i2c_readAck+0x6>

    return TWDR;
     2de:	80 91 bb 00 	lds	r24, 0x00BB

}
     2e2:	08 95       	ret

000002e4 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
uint8_t i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     2e4:	84 e8       	ldi	r24, 0x84	; 132
     2e6:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     2ea:	80 91 bc 00 	lds	r24, 0x00BC
     2ee:	87 ff       	sbrs	r24, 7
     2f0:	fc cf       	rjmp	.-8      	; 0x2ea <i2c_readNak+0x6>
	
    return TWDR;
     2f2:	80 91 bb 00 	lds	r24, 0x00BB

     2f6:	08 95       	ret

000002f8 <read_temp_celsius>:
 
 Return: float value in Celsius
 
*************************************************************************/

float read_temp_celsius(void) {
     2f8:	cf 93       	push	r28
    if (i2c_start(BAR_SLAVE_ADDRESS << 1) == 0) {
     2fa:	8a eb       	ldi	r24, 0xBA	; 186
     2fc:	0e 94 04 01 	call	0x208	; 0x208 <i2c_start>
     300:	88 23       	and	r24, r24
     302:	29 f0       	breq	.+10     	; 0x30e <read_temp_celsius+0x16>
            return (45.5 + ((float) temp) / 480); //To Celsius

        }

    }
    return 1;
     304:	60 e0       	ldi	r22, 0x00	; 0
     306:	70 e0       	ldi	r23, 0x00	; 0
     308:	80 e8       	ldi	r24, 0x80	; 128
     30a:	9f e3       	ldi	r25, 0x3F	; 63
     30c:	22 c0       	rjmp	.+68     	; 0x352 <read_temp_celsius+0x5a>
 
*************************************************************************/

float read_temp_celsius(void) {
    if (i2c_start(BAR_SLAVE_ADDRESS << 1) == 0) {
        i2c_write(BAR_TEMP_OUT_L | (1 << 7));
     30e:	8b ea       	ldi	r24, 0xAB	; 171
     310:	0e 94 57 01 	call	0x2ae	; 0x2ae <i2c_write>

        if (i2c_rep_start(((uint8_t) BAR_SLAVE_ADDRESS << 1) | 1) == 0) {
     314:	8b eb       	ldi	r24, 0xBB	; 187
     316:	0e 94 4d 01 	call	0x29a	; 0x29a <i2c_rep_start>
     31a:	81 11       	cpse	r24, r1
     31c:	f3 cf       	rjmp	.-26     	; 0x304 <read_temp_celsius+0xc>
            uint8_t tl = i2c_read(ACK);
     31e:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>
     322:	c8 2f       	mov	r28, r24
            uint8_t th = i2c_read(NAK);
     324:	0e 94 72 01 	call	0x2e4	; 0x2e4 <i2c_readNak>
            int16_t temp = (int16_t) (th << 8 | tl);
     328:	6c 2f       	mov	r22, r28
     32a:	70 e0       	ldi	r23, 0x00	; 0
     32c:	78 2b       	or	r23, r24
            return (45.5 + ((float) temp) / 480); //To Celsius
     32e:	88 27       	eor	r24, r24
     330:	77 fd       	sbrc	r23, 7
     332:	80 95       	com	r24
     334:	98 2f       	mov	r25, r24
     336:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__floatsisf>
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	40 ef       	ldi	r20, 0xF0	; 240
     340:	53 e4       	ldi	r21, 0x43	; 67
     342:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__divsf3>
     346:	20 e0       	ldi	r18, 0x00	; 0
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	46 e3       	ldi	r20, 0x36	; 54
     34c:	52 e4       	ldi	r21, 0x42	; 66
     34e:	0e 94 1a 06 	call	0xc34	; 0xc34 <__addsf3>

        }

    }
    return 1;
}/*read_temp_celsius*/
     352:	cf 91       	pop	r28
     354:	08 95       	ret

00000356 <read_pressure_hpa>:
 Read the pressure
 
 Return: float value in hpa
 
************************************************************************/
float read_pressure_hpa(void) {
     356:	0f 93       	push	r16
     358:	1f 93       	push	r17
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
    if (i2c_start(BAR_SLAVE_ADDRESS << 1) == 0) {
     35e:	8a eb       	ldi	r24, 0xBA	; 186
     360:	0e 94 04 01 	call	0x208	; 0x208 <i2c_start>
     364:	88 23       	and	r24, r24
     366:	29 f0       	breq	.+10     	; 0x372 <read_pressure_hpa+0x1c>

            int32_t temp = (int32_t) (int8_t) ph << 16 | (uint16_t) pl << 8 | pxl;
            return ((float) temp / 4096);
        }
    }
    return 1;
     368:	60 e0       	ldi	r22, 0x00	; 0
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	80 e8       	ldi	r24, 0x80	; 128
     36e:	9f e3       	ldi	r25, 0x3F	; 63
     370:	2f c0       	rjmp	.+94     	; 0x3d0 <read_pressure_hpa+0x7a>
 Return: float value in hpa
 
************************************************************************/
float read_pressure_hpa(void) {
    if (i2c_start(BAR_SLAVE_ADDRESS << 1) == 0) {
        i2c_write(BAR_PRESS_POUT_XL | (1 << 7));
     372:	88 ea       	ldi	r24, 0xA8	; 168
     374:	0e 94 57 01 	call	0x2ae	; 0x2ae <i2c_write>

        if (i2c_rep_start(((uint8_t) BAR_SLAVE_ADDRESS << 1) | 1) == 0) {
     378:	8b eb       	ldi	r24, 0xBB	; 187
     37a:	0e 94 4d 01 	call	0x29a	; 0x29a <i2c_rep_start>
     37e:	81 11       	cpse	r24, r1
     380:	f3 cf       	rjmp	.-26     	; 0x368 <read_pressure_hpa+0x12>
            uint8_t pxl = i2c_read(ACK);
     382:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>
     386:	d8 2f       	mov	r29, r24
            uint8_t pl = i2c_read(ACK);
     388:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>
     38c:	c8 2f       	mov	r28, r24
            uint8_t ph = i2c_read(NAK);
     38e:	0e 94 72 01 	call	0x2e4	; 0x2e4 <i2c_readNak>

            int32_t temp = (int32_t) (int8_t) ph << 16 | (uint16_t) pl << 8 | pxl;
     392:	99 27       	eor	r25, r25
     394:	87 fd       	sbrc	r24, 7
     396:	90 95       	com	r25
     398:	a9 2f       	mov	r26, r25
     39a:	b9 2f       	mov	r27, r25
     39c:	9c 01       	movw	r18, r24
     39e:	11 27       	eor	r17, r17
     3a0:	00 27       	eor	r16, r16
     3a2:	4c 2f       	mov	r20, r28
     3a4:	50 e0       	ldi	r21, 0x00	; 0
     3a6:	54 2f       	mov	r21, r20
     3a8:	44 27       	eor	r20, r20
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	70 e0       	ldi	r23, 0x00	; 0
     3ae:	d9 01       	movw	r26, r18
     3b0:	c8 01       	movw	r24, r16
     3b2:	84 2b       	or	r24, r20
     3b4:	95 2b       	or	r25, r21
     3b6:	a6 2b       	or	r26, r22
     3b8:	b7 2b       	or	r27, r23
     3ba:	bc 01       	movw	r22, r24
     3bc:	cd 01       	movw	r24, r26
     3be:	6d 2b       	or	r22, r29
            return ((float) temp / 4096);
     3c0:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__floatsisf>
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e8       	ldi	r20, 0x80	; 128
     3ca:	59 e3       	ldi	r21, 0x39	; 57
     3cc:	0e 94 74 07 	call	0xee8	; 0xee8 <__mulsf3>
        }
    }
    return 1;

}/*read_pressure_hpa*/
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	1f 91       	pop	r17
     3d6:	0f 91       	pop	r16
     3d8:	08 95       	ret

000003da <init_bar>:
 Initialize the bar,, more info on the way
 
************************************************************************/

void init_bar(void) {
    write_to_reg(BAR_SLAVE_ADDRESS,BAR_CTRL_REG1, 0xB0);
     3da:	40 eb       	ldi	r20, 0xB0	; 176
     3dc:	60 e2       	ldi	r22, 0x20	; 32
     3de:	8d e5       	ldi	r24, 0x5D	; 93
     3e0:	0c 94 27 02 	jmp	0x44e	; 0x44e <write_to_reg>

000003e4 <init_gyro>:
 
*************************************************************************/

void init_gyro(void) {
    
    write_to_reg(GYRO_SLAVE_ADDRESS,GYRO_LOW_ODR, 0x00);
     3e4:	40 e0       	ldi	r20, 0x00	; 0
     3e6:	69 e3       	ldi	r22, 0x39	; 57
     3e8:	8b e6       	ldi	r24, 0x6B	; 107
     3ea:	0e 94 27 02 	call	0x44e	; 0x44e <write_to_reg>
    write_to_reg(GYRO_SLAVE_ADDRESS,GYRO_CTRL4, 0x00);
     3ee:	40 e0       	ldi	r20, 0x00	; 0
     3f0:	63 e2       	ldi	r22, 0x23	; 35
     3f2:	8b e6       	ldi	r24, 0x6B	; 107
     3f4:	0e 94 27 02 	call	0x44e	; 0x44e <write_to_reg>
    write_to_reg(GYRO_SLAVE_ADDRESS,GYRO_CTRL1, 0x6F);
     3f8:	4f e6       	ldi	r20, 0x6F	; 111
     3fa:	60 e2       	ldi	r22, 0x20	; 32
     3fc:	8b e6       	ldi	r24, 0x6B	; 107
     3fe:	0c 94 27 02 	jmp	0x44e	; 0x44e <write_to_reg>

00000402 <read_gyro_values>:
 Read the values from all three axis.
 
 Return: valstruct loaded with x:y:z
 
*************************************************************************/
struct valstruct read_gyro_values(void) {
     402:	cf 93       	push	r28
     404:	df 93       	push	r29

    Val val;
    if (i2c_start(GYRO_SLAVE_ADDRESS << 1) == 0) {
     406:	86 ed       	ldi	r24, 0xD6	; 214
     408:	0e 94 04 01 	call	0x208	; 0x208 <i2c_start>
     40c:	81 11       	cpse	r24, r1
     40e:	19 c0       	rjmp	.+50     	; 0x442 <read_gyro_values+0x40>
        i2c_write(GYRO_OUT_X_L | (1 << 7));//Auto increment registers by writing the MSB high
     410:	88 ea       	ldi	r24, 0xA8	; 168
     412:	0e 94 57 01 	call	0x2ae	; 0x2ae <i2c_write>

        if (i2c_rep_start(((uint8_t) GYRO_SLAVE_ADDRESS << 1) | 1) == 0) {
     416:	87 ed       	ldi	r24, 0xD7	; 215
     418:	0e 94 4d 01 	call	0x29a	; 0x29a <i2c_rep_start>
     41c:	81 11       	cpse	r24, r1
     41e:	11 c0       	rjmp	.+34     	; 0x442 <read_gyro_values+0x40>
            uint8_t xlg = i2c_read(ACK);
     420:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>
     424:	d8 2f       	mov	r29, r24
            uint8_t xhg = i2c_read(ACK);
     426:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>
            
            uint8_t ylg = i2c_read(ACK);
     42a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>
     42e:	c8 2f       	mov	r28, r24
            uint8_t yhg = i2c_read(ACK);
     430:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>

            uint8_t zhg = i2c_read(ACK);
     434:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_readAck>
            uint8_t zlg = i2c_read(NAK);//TODO watch this
     438:	0e 94 72 01 	call	0x2e4	; 0x2e4 <i2c_readNak>


            val.x = (int16_t) (xhg << 8 | xlg);
            val.y = (int16_t) (yhg << 8 | ylg);
            val.z = (int16_t) (zhg << 8 | zlg);
            return val;
     43c:	6d 2f       	mov	r22, r29
     43e:	7c 2f       	mov	r23, r28
     440:	03 c0       	rjmp	.+6      	; 0x448 <read_gyro_values+0x46>
            
        }

    }
    return val;
     442:	60 e0       	ldi	r22, 0x00	; 0
     444:	70 e0       	ldi	r23, 0x00	; 0
     446:	80 e0       	ldi	r24, 0x00	; 0
}/*read_gyro_values*/
     448:	df 91       	pop	r29
     44a:	cf 91       	pop	r28
     44c:	08 95       	ret

0000044e <write_to_reg>:
 Return: 0 if success
         1 if fail
 
*************************************************************************/

uint8_t write_to_reg(unsigned char address_slave,unsigned char reg_slave, uint8_t data){
     44e:	0f 93       	push	r16
     450:	1f 93       	push	r17
     452:	cf 93       	push	r28
     454:	df 93       	push	r29
     456:	1f 92       	push	r1
     458:	cd b7       	in	r28, 0x3d	; 61
     45a:	de b7       	in	r29, 0x3e	; 62
     45c:	04 2f       	mov	r16, r20
     if (i2c_start(address_slave << 1) == 0) {
     45e:	88 0f       	add	r24, r24
     460:	69 83       	std	Y+1, r22	; 0x01
     462:	0e 94 04 01 	call	0x208	; 0x208 <i2c_start>
     466:	18 2f       	mov	r17, r24
     468:	69 81       	ldd	r22, Y+1	; 0x01
     46a:	81 11       	cpse	r24, r1
     46c:	09 c0       	rjmp	.+18     	; 0x480 <write_to_reg+0x32>
        i2c_write(reg_slave);
     46e:	86 2f       	mov	r24, r22
     470:	0e 94 57 01 	call	0x2ae	; 0x2ae <i2c_write>
        i2c_write(data);
     474:	80 2f       	mov	r24, r16
     476:	0e 94 57 01 	call	0x2ae	; 0x2ae <i2c_write>
        i2c_stop();
     47a:	0e 94 4f 01 	call	0x29e	; 0x29e <i2c_stop>
        return 0;
     47e:	01 c0       	rjmp	.+2      	; 0x482 <write_to_reg+0x34>
    } else {
        return 1;
     480:	11 e0       	ldi	r17, 0x01	; 1
    }
}/*write_to_reg*/
     482:	81 2f       	mov	r24, r17
     484:	0f 90       	pop	r0
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	1f 91       	pop	r17
     48c:	0f 91       	pop	r16
     48e:	08 95       	ret

00000490 <read_from_reg>:
     490:	1f 93       	push	r17
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	1f 92       	push	r1
     498:	cd b7       	in	r28, 0x3d	; 61
     49a:	de b7       	in	r29, 0x3e	; 62
     49c:	18 2f       	mov	r17, r24
     49e:	88 0f       	add	r24, r24
     4a0:	69 83       	std	Y+1, r22	; 0x01
     4a2:	0e 94 04 01 	call	0x208	; 0x208 <i2c_start>
     4a6:	69 81       	ldd	r22, Y+1	; 0x01
     4a8:	81 11       	cpse	r24, r1
     4aa:	10 c0       	rjmp	.+32     	; 0x4cc <read_from_reg+0x3c>
     4ac:	86 2f       	mov	r24, r22
     4ae:	0e 94 57 01 	call	0x2ae	; 0x2ae <i2c_write>
     4b2:	81 2f       	mov	r24, r17
     4b4:	88 0f       	add	r24, r24
     4b6:	81 60       	ori	r24, 0x01	; 1
     4b8:	0e 94 4d 01 	call	0x29a	; 0x29a <i2c_rep_start>
     4bc:	81 11       	cpse	r24, r1
     4be:	06 c0       	rjmp	.+12     	; 0x4cc <read_from_reg+0x3c>
     4c0:	0f 90       	pop	r0
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	1f 91       	pop	r17
     4c8:	0c 94 72 01 	jmp	0x2e4	; 0x2e4 <i2c_readNak>
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	0f 90       	pop	r0
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	08 95       	ret

000004d8 <main>:
 * 
 *  
 */


int main(void) {
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	cd b7       	in	r28, 0x3d	; 61
     4de:	de b7       	in	r29, 0x3e	; 62
     4e0:	2e 97       	sbiw	r28, 0x0e	; 14
     4e2:	0f b6       	in	r0, 0x3f	; 63
     4e4:	f8 94       	cli
     4e6:	de bf       	out	0x3e, r29	; 62
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	cd bf       	out	0x3d, r28	; 61
    USART0Init();
     4ec:	0e 94 c9 00 	call	0x192	; 0x192 <USART0Init>
    TWIInit();
     4f0:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <TWIInit>

    //Set stream pointer
    FILE usart0_str = FDEV_SETUP_STREAM(USART0SendByte, USART0ReceiveByte, _FDEV_SETUP_RW);
     4f4:	fe 01       	movw	r30, r28
     4f6:	31 96       	adiw	r30, 0x01	; 1
     4f8:	8e e0       	ldi	r24, 0x0E	; 14
     4fa:	df 01       	movw	r26, r30
     4fc:	1d 92       	st	X+, r1
     4fe:	8a 95       	dec	r24
     500:	e9 f7       	brne	.-6      	; 0x4fc <main+0x24>
     502:	83 e0       	ldi	r24, 0x03	; 3
     504:	8c 83       	std	Y+4, r24	; 0x04
     506:	89 ed       	ldi	r24, 0xD9	; 217
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	9a 87       	std	Y+10, r25	; 0x0a
     50c:	89 87       	std	Y+9, r24	; 0x09
     50e:	8c ee       	ldi	r24, 0xEC	; 236
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	9c 87       	std	Y+12, r25	; 0x0c
     514:	8b 87       	std	Y+11, r24	; 0x0b
    //assign our stream to standart I/O streams
    stdin = stdout = &usart0_str;
     516:	f0 93 03 01 	sts	0x0103, r31
     51a:	e0 93 02 01 	sts	0x0102, r30
     51e:	f0 93 01 01 	sts	0x0101, r31
     522:	e0 93 00 01 	sts	0x0100, r30
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     526:	bf ef       	ldi	r27, 0xFF	; 255
     528:	23 ed       	ldi	r18, 0xD3	; 211
     52a:	80 e3       	ldi	r24, 0x30	; 48
     52c:	b1 50       	subi	r27, 0x01	; 1
     52e:	20 40       	sbci	r18, 0x00	; 0
     530:	80 40       	sbci	r24, 0x00	; 0
     532:	e1 f7       	brne	.-8      	; 0x52c <main+0x54>
     534:	00 c0       	rjmp	.+0      	; 0x536 <main+0x5e>
     536:	00 00       	nop
     538:	f6 cf       	rjmp	.-20     	; 0x526 <main+0x4e>

0000053a <vfprintf>:
     53a:	a3 e1       	ldi	r26, 0x13	; 19
     53c:	b0 e0       	ldi	r27, 0x00	; 0
     53e:	e3 ea       	ldi	r30, 0xA3	; 163
     540:	f2 e0       	ldi	r31, 0x02	; 2
     542:	0c 94 d7 07 	jmp	0xfae	; 0xfae <__prologue_saves__>
     546:	6c 01       	movw	r12, r24
     548:	4b 01       	movw	r8, r22
     54a:	2a 01       	movw	r4, r20
     54c:	fc 01       	movw	r30, r24
     54e:	17 82       	std	Z+7, r1	; 0x07
     550:	16 82       	std	Z+6, r1	; 0x06
     552:	83 81       	ldd	r24, Z+3	; 0x03
     554:	81 ff       	sbrs	r24, 1
     556:	43 c3       	rjmp	.+1670   	; 0xbde <__stack+0x2df>
     558:	ae 01       	movw	r20, r28
     55a:	4f 5f       	subi	r20, 0xFF	; 255
     55c:	5f 4f       	sbci	r21, 0xFF	; 255
     55e:	3a 01       	movw	r6, r20
     560:	f6 01       	movw	r30, r12
     562:	93 81       	ldd	r25, Z+3	; 0x03
     564:	f4 01       	movw	r30, r8
     566:	93 fd       	sbrc	r25, 3
     568:	85 91       	lpm	r24, Z+
     56a:	93 ff       	sbrs	r25, 3
     56c:	81 91       	ld	r24, Z+
     56e:	4f 01       	movw	r8, r30
     570:	88 23       	and	r24, r24
     572:	09 f4       	brne	.+2      	; 0x576 <vfprintf+0x3c>
     574:	30 c3       	rjmp	.+1632   	; 0xbd6 <__stack+0x2d7>
     576:	85 32       	cpi	r24, 0x25	; 37
     578:	39 f4       	brne	.+14     	; 0x588 <vfprintf+0x4e>
     57a:	93 fd       	sbrc	r25, 3
     57c:	85 91       	lpm	r24, Z+
     57e:	93 ff       	sbrs	r25, 3
     580:	81 91       	ld	r24, Z+
     582:	4f 01       	movw	r8, r30
     584:	85 32       	cpi	r24, 0x25	; 37
     586:	39 f4       	brne	.+14     	; 0x596 <vfprintf+0x5c>
     588:	b6 01       	movw	r22, r12
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     590:	52 01       	movw	r10, r4
     592:	25 01       	movw	r4, r10
     594:	e5 cf       	rjmp	.-54     	; 0x560 <vfprintf+0x26>
     596:	10 e0       	ldi	r17, 0x00	; 0
     598:	f1 2c       	mov	r15, r1
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	20 32       	cpi	r18, 0x20	; 32
     59e:	a0 f4       	brcc	.+40     	; 0x5c8 <vfprintf+0x8e>
     5a0:	8b 32       	cpi	r24, 0x2B	; 43
     5a2:	69 f0       	breq	.+26     	; 0x5be <vfprintf+0x84>
     5a4:	30 f4       	brcc	.+12     	; 0x5b2 <vfprintf+0x78>
     5a6:	80 32       	cpi	r24, 0x20	; 32
     5a8:	59 f0       	breq	.+22     	; 0x5c0 <vfprintf+0x86>
     5aa:	83 32       	cpi	r24, 0x23	; 35
     5ac:	69 f4       	brne	.+26     	; 0x5c8 <vfprintf+0x8e>
     5ae:	20 61       	ori	r18, 0x10	; 16
     5b0:	2c c0       	rjmp	.+88     	; 0x60a <vfprintf+0xd0>
     5b2:	8d 32       	cpi	r24, 0x2D	; 45
     5b4:	39 f0       	breq	.+14     	; 0x5c4 <vfprintf+0x8a>
     5b6:	80 33       	cpi	r24, 0x30	; 48
     5b8:	39 f4       	brne	.+14     	; 0x5c8 <vfprintf+0x8e>
     5ba:	21 60       	ori	r18, 0x01	; 1
     5bc:	26 c0       	rjmp	.+76     	; 0x60a <vfprintf+0xd0>
     5be:	22 60       	ori	r18, 0x02	; 2
     5c0:	24 60       	ori	r18, 0x04	; 4
     5c2:	23 c0       	rjmp	.+70     	; 0x60a <vfprintf+0xd0>
     5c4:	28 60       	ori	r18, 0x08	; 8
     5c6:	21 c0       	rjmp	.+66     	; 0x60a <vfprintf+0xd0>
     5c8:	27 fd       	sbrc	r18, 7
     5ca:	27 c0       	rjmp	.+78     	; 0x61a <vfprintf+0xe0>
     5cc:	30 ed       	ldi	r19, 0xD0	; 208
     5ce:	38 0f       	add	r19, r24
     5d0:	3a 30       	cpi	r19, 0x0A	; 10
     5d2:	78 f4       	brcc	.+30     	; 0x5f2 <vfprintf+0xb8>
     5d4:	26 ff       	sbrs	r18, 6
     5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <vfprintf+0xaa>
     5d8:	fa e0       	ldi	r31, 0x0A	; 10
     5da:	1f 9f       	mul	r17, r31
     5dc:	30 0d       	add	r19, r0
     5de:	11 24       	eor	r1, r1
     5e0:	13 2f       	mov	r17, r19
     5e2:	13 c0       	rjmp	.+38     	; 0x60a <vfprintf+0xd0>
     5e4:	4a e0       	ldi	r20, 0x0A	; 10
     5e6:	f4 9e       	mul	r15, r20
     5e8:	30 0d       	add	r19, r0
     5ea:	11 24       	eor	r1, r1
     5ec:	f3 2e       	mov	r15, r19
     5ee:	20 62       	ori	r18, 0x20	; 32
     5f0:	0c c0       	rjmp	.+24     	; 0x60a <vfprintf+0xd0>
     5f2:	8e 32       	cpi	r24, 0x2E	; 46
     5f4:	21 f4       	brne	.+8      	; 0x5fe <vfprintf+0xc4>
     5f6:	26 fd       	sbrc	r18, 6
     5f8:	ee c2       	rjmp	.+1500   	; 0xbd6 <__stack+0x2d7>
     5fa:	20 64       	ori	r18, 0x40	; 64
     5fc:	06 c0       	rjmp	.+12     	; 0x60a <vfprintf+0xd0>
     5fe:	8c 36       	cpi	r24, 0x6C	; 108
     600:	11 f4       	brne	.+4      	; 0x606 <vfprintf+0xcc>
     602:	20 68       	ori	r18, 0x80	; 128
     604:	02 c0       	rjmp	.+4      	; 0x60a <vfprintf+0xd0>
     606:	88 36       	cpi	r24, 0x68	; 104
     608:	41 f4       	brne	.+16     	; 0x61a <vfprintf+0xe0>
     60a:	f4 01       	movw	r30, r8
     60c:	93 fd       	sbrc	r25, 3
     60e:	85 91       	lpm	r24, Z+
     610:	93 ff       	sbrs	r25, 3
     612:	81 91       	ld	r24, Z+
     614:	4f 01       	movw	r8, r30
     616:	81 11       	cpse	r24, r1
     618:	c1 cf       	rjmp	.-126    	; 0x59c <vfprintf+0x62>
     61a:	9b eb       	ldi	r25, 0xBB	; 187
     61c:	98 0f       	add	r25, r24
     61e:	93 30       	cpi	r25, 0x03	; 3
     620:	18 f4       	brcc	.+6      	; 0x628 <vfprintf+0xee>
     622:	20 61       	ori	r18, 0x10	; 16
     624:	80 5e       	subi	r24, 0xE0	; 224
     626:	06 c0       	rjmp	.+12     	; 0x634 <vfprintf+0xfa>
     628:	9b e9       	ldi	r25, 0x9B	; 155
     62a:	98 0f       	add	r25, r24
     62c:	93 30       	cpi	r25, 0x03	; 3
     62e:	08 f0       	brcs	.+2      	; 0x632 <vfprintf+0xf8>
     630:	71 c1       	rjmp	.+738    	; 0x914 <__stack+0x15>
     632:	2f 7e       	andi	r18, 0xEF	; 239
     634:	26 ff       	sbrs	r18, 6
     636:	16 e0       	ldi	r17, 0x06	; 6
     638:	2f 73       	andi	r18, 0x3F	; 63
     63a:	32 2e       	mov	r3, r18
     63c:	85 36       	cpi	r24, 0x65	; 101
     63e:	19 f4       	brne	.+6      	; 0x646 <vfprintf+0x10c>
     640:	20 64       	ori	r18, 0x40	; 64
     642:	32 2e       	mov	r3, r18
     644:	08 c0       	rjmp	.+16     	; 0x656 <vfprintf+0x11c>
     646:	86 36       	cpi	r24, 0x66	; 102
     648:	21 f4       	brne	.+8      	; 0x652 <vfprintf+0x118>
     64a:	f2 2f       	mov	r31, r18
     64c:	f0 68       	ori	r31, 0x80	; 128
     64e:	3f 2e       	mov	r3, r31
     650:	02 c0       	rjmp	.+4      	; 0x656 <vfprintf+0x11c>
     652:	11 11       	cpse	r17, r1
     654:	11 50       	subi	r17, 0x01	; 1
     656:	37 fe       	sbrs	r3, 7
     658:	07 c0       	rjmp	.+14     	; 0x668 <vfprintf+0x12e>
     65a:	1c 33       	cpi	r17, 0x3C	; 60
     65c:	50 f4       	brcc	.+20     	; 0x672 <vfprintf+0x138>
     65e:	ee 24       	eor	r14, r14
     660:	e3 94       	inc	r14
     662:	e1 0e       	add	r14, r17
     664:	27 e0       	ldi	r18, 0x07	; 7
     666:	0b c0       	rjmp	.+22     	; 0x67e <vfprintf+0x144>
     668:	18 30       	cpi	r17, 0x08	; 8
     66a:	38 f0       	brcs	.+14     	; 0x67a <vfprintf+0x140>
     66c:	27 e0       	ldi	r18, 0x07	; 7
     66e:	17 e0       	ldi	r17, 0x07	; 7
     670:	05 c0       	rjmp	.+10     	; 0x67c <vfprintf+0x142>
     672:	27 e0       	ldi	r18, 0x07	; 7
     674:	4c e3       	ldi	r20, 0x3C	; 60
     676:	e4 2e       	mov	r14, r20
     678:	02 c0       	rjmp	.+4      	; 0x67e <vfprintf+0x144>
     67a:	21 2f       	mov	r18, r17
     67c:	e1 2c       	mov	r14, r1
     67e:	52 01       	movw	r10, r4
     680:	44 e0       	ldi	r20, 0x04	; 4
     682:	a4 0e       	add	r10, r20
     684:	b1 1c       	adc	r11, r1
     686:	f2 01       	movw	r30, r4
     688:	60 81       	ld	r22, Z
     68a:	71 81       	ldd	r23, Z+1	; 0x01
     68c:	82 81       	ldd	r24, Z+2	; 0x02
     68e:	93 81       	ldd	r25, Z+3	; 0x03
     690:	0e 2d       	mov	r16, r14
     692:	a3 01       	movw	r20, r6
     694:	0e 94 0e 08 	call	0x101c	; 0x101c <__ftoa_engine>
     698:	2c 01       	movw	r4, r24
     69a:	09 81       	ldd	r16, Y+1	; 0x01
     69c:	00 ff       	sbrs	r16, 0
     69e:	02 c0       	rjmp	.+4      	; 0x6a4 <vfprintf+0x16a>
     6a0:	03 ff       	sbrs	r16, 3
     6a2:	07 c0       	rjmp	.+14     	; 0x6b2 <vfprintf+0x178>
     6a4:	31 fc       	sbrc	r3, 1
     6a6:	08 c0       	rjmp	.+16     	; 0x6b8 <vfprintf+0x17e>
     6a8:	32 fe       	sbrs	r3, 2
     6aa:	09 c0       	rjmp	.+18     	; 0x6be <vfprintf+0x184>
     6ac:	30 e2       	ldi	r19, 0x20	; 32
     6ae:	23 2e       	mov	r2, r19
     6b0:	07 c0       	rjmp	.+14     	; 0x6c0 <vfprintf+0x186>
     6b2:	2d e2       	ldi	r18, 0x2D	; 45
     6b4:	22 2e       	mov	r2, r18
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <vfprintf+0x186>
     6b8:	9b e2       	ldi	r25, 0x2B	; 43
     6ba:	29 2e       	mov	r2, r25
     6bc:	01 c0       	rjmp	.+2      	; 0x6c0 <vfprintf+0x186>
     6be:	21 2c       	mov	r2, r1
     6c0:	80 2f       	mov	r24, r16
     6c2:	8c 70       	andi	r24, 0x0C	; 12
     6c4:	19 f0       	breq	.+6      	; 0x6cc <vfprintf+0x192>
     6c6:	21 10       	cpse	r2, r1
     6c8:	68 c2       	rjmp	.+1232   	; 0xb9a <__stack+0x29b>
     6ca:	a8 c2       	rjmp	.+1360   	; 0xc1c <__stack+0x31d>
     6cc:	37 fe       	sbrs	r3, 7
     6ce:	0f c0       	rjmp	.+30     	; 0x6ee <vfprintf+0x1b4>
     6d0:	e4 0c       	add	r14, r4
     6d2:	04 ff       	sbrs	r16, 4
     6d4:	04 c0       	rjmp	.+8      	; 0x6de <vfprintf+0x1a4>
     6d6:	8a 81       	ldd	r24, Y+2	; 0x02
     6d8:	81 33       	cpi	r24, 0x31	; 49
     6da:	09 f4       	brne	.+2      	; 0x6de <vfprintf+0x1a4>
     6dc:	ea 94       	dec	r14
     6de:	1e 14       	cp	r1, r14
     6e0:	74 f5       	brge	.+92     	; 0x73e <vfprintf+0x204>
     6e2:	f8 e0       	ldi	r31, 0x08	; 8
     6e4:	fe 15       	cp	r31, r14
     6e6:	78 f5       	brcc	.+94     	; 0x746 <vfprintf+0x20c>
     6e8:	88 e0       	ldi	r24, 0x08	; 8
     6ea:	e8 2e       	mov	r14, r24
     6ec:	2c c0       	rjmp	.+88     	; 0x746 <vfprintf+0x20c>
     6ee:	36 fc       	sbrc	r3, 6
     6f0:	2a c0       	rjmp	.+84     	; 0x746 <vfprintf+0x20c>
     6f2:	81 2f       	mov	r24, r17
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	84 15       	cp	r24, r4
     6f8:	95 05       	cpc	r25, r5
     6fa:	9c f0       	brlt	.+38     	; 0x722 <vfprintf+0x1e8>
     6fc:	2c ef       	ldi	r18, 0xFC	; 252
     6fe:	42 16       	cp	r4, r18
     700:	2f ef       	ldi	r18, 0xFF	; 255
     702:	52 06       	cpc	r5, r18
     704:	74 f0       	brlt	.+28     	; 0x722 <vfprintf+0x1e8>
     706:	43 2d       	mov	r20, r3
     708:	40 68       	ori	r20, 0x80	; 128
     70a:	34 2e       	mov	r3, r20
     70c:	0a c0       	rjmp	.+20     	; 0x722 <vfprintf+0x1e8>
     70e:	e2 e0       	ldi	r30, 0x02	; 2
     710:	f0 e0       	ldi	r31, 0x00	; 0
     712:	ec 0f       	add	r30, r28
     714:	fd 1f       	adc	r31, r29
     716:	e1 0f       	add	r30, r17
     718:	f1 1d       	adc	r31, r1
     71a:	80 81       	ld	r24, Z
     71c:	80 33       	cpi	r24, 0x30	; 48
     71e:	19 f4       	brne	.+6      	; 0x726 <vfprintf+0x1ec>
     720:	11 50       	subi	r17, 0x01	; 1
     722:	11 11       	cpse	r17, r1
     724:	f4 cf       	rjmp	.-24     	; 0x70e <vfprintf+0x1d4>
     726:	37 fe       	sbrs	r3, 7
     728:	0e c0       	rjmp	.+28     	; 0x746 <vfprintf+0x20c>
     72a:	ee 24       	eor	r14, r14
     72c:	e3 94       	inc	r14
     72e:	e1 0e       	add	r14, r17
     730:	81 2f       	mov	r24, r17
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	48 16       	cp	r4, r24
     736:	59 06       	cpc	r5, r25
     738:	2c f4       	brge	.+10     	; 0x744 <vfprintf+0x20a>
     73a:	14 19       	sub	r17, r4
     73c:	04 c0       	rjmp	.+8      	; 0x746 <vfprintf+0x20c>
     73e:	ee 24       	eor	r14, r14
     740:	e3 94       	inc	r14
     742:	01 c0       	rjmp	.+2      	; 0x746 <vfprintf+0x20c>
     744:	10 e0       	ldi	r17, 0x00	; 0
     746:	37 fe       	sbrs	r3, 7
     748:	06 c0       	rjmp	.+12     	; 0x756 <vfprintf+0x21c>
     74a:	14 14       	cp	r1, r4
     74c:	15 04       	cpc	r1, r5
     74e:	34 f4       	brge	.+12     	; 0x75c <vfprintf+0x222>
     750:	c2 01       	movw	r24, r4
     752:	01 96       	adiw	r24, 0x01	; 1
     754:	05 c0       	rjmp	.+10     	; 0x760 <vfprintf+0x226>
     756:	85 e0       	ldi	r24, 0x05	; 5
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	02 c0       	rjmp	.+4      	; 0x760 <vfprintf+0x226>
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	21 10       	cpse	r2, r1
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	11 23       	and	r17, r17
     766:	31 f0       	breq	.+12     	; 0x774 <vfprintf+0x23a>
     768:	21 2f       	mov	r18, r17
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	2f 5f       	subi	r18, 0xFF	; 255
     76e:	3f 4f       	sbci	r19, 0xFF	; 255
     770:	82 0f       	add	r24, r18
     772:	93 1f       	adc	r25, r19
     774:	2f 2d       	mov	r18, r15
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	82 17       	cp	r24, r18
     77a:	93 07       	cpc	r25, r19
     77c:	14 f4       	brge	.+4      	; 0x782 <vfprintf+0x248>
     77e:	f8 1a       	sub	r15, r24
     780:	01 c0       	rjmp	.+2      	; 0x784 <vfprintf+0x24a>
     782:	f1 2c       	mov	r15, r1
     784:	83 2d       	mov	r24, r3
     786:	89 70       	andi	r24, 0x09	; 9
     788:	49 f4       	brne	.+18     	; 0x79c <vfprintf+0x262>
     78a:	ff 20       	and	r15, r15
     78c:	39 f0       	breq	.+14     	; 0x79c <vfprintf+0x262>
     78e:	b6 01       	movw	r22, r12
     790:	80 e2       	ldi	r24, 0x20	; 32
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     798:	fa 94       	dec	r15
     79a:	f7 cf       	rjmp	.-18     	; 0x78a <vfprintf+0x250>
     79c:	22 20       	and	r2, r2
     79e:	29 f0       	breq	.+10     	; 0x7aa <vfprintf+0x270>
     7a0:	b6 01       	movw	r22, r12
     7a2:	82 2d       	mov	r24, r2
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     7aa:	33 fc       	sbrc	r3, 3
     7ac:	09 c0       	rjmp	.+18     	; 0x7c0 <vfprintf+0x286>
     7ae:	ff 20       	and	r15, r15
     7b0:	39 f0       	breq	.+14     	; 0x7c0 <vfprintf+0x286>
     7b2:	b6 01       	movw	r22, r12
     7b4:	80 e3       	ldi	r24, 0x30	; 48
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     7bc:	fa 94       	dec	r15
     7be:	f7 cf       	rjmp	.-18     	; 0x7ae <vfprintf+0x274>
     7c0:	37 fe       	sbrs	r3, 7
     7c2:	5a c0       	rjmp	.+180    	; 0x878 <vfprintf+0x33e>
     7c4:	94 2d       	mov	r25, r4
     7c6:	85 2d       	mov	r24, r5
     7c8:	57 fe       	sbrs	r5, 7
     7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <vfprintf+0x296>
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	29 2e       	mov	r2, r25
     7d2:	38 2e       	mov	r3, r24
     7d4:	20 e0       	ldi	r18, 0x00	; 0
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	a2 01       	movw	r20, r4
     7da:	4e 19       	sub	r20, r14
     7dc:	51 09       	sbc	r21, r1
     7de:	5d 87       	std	Y+13, r21	; 0x0d
     7e0:	4c 87       	std	Y+12, r20	; 0x0c
     7e2:	a2 01       	movw	r20, r4
     7e4:	42 19       	sub	r20, r2
     7e6:	53 09       	sbc	r21, r3
     7e8:	5f 87       	std	Y+15, r21	; 0x0f
     7ea:	4e 87       	std	Y+14, r20	; 0x0e
     7ec:	61 2f       	mov	r22, r17
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	44 27       	eor	r20, r20
     7f2:	55 27       	eor	r21, r21
     7f4:	46 1b       	sub	r20, r22
     7f6:	57 0b       	sbc	r21, r23
     7f8:	59 8b       	std	Y+17, r21	; 0x11
     7fa:	48 8b       	std	Y+16, r20	; 0x10
     7fc:	5f ef       	ldi	r21, 0xFF	; 255
     7fe:	25 16       	cp	r2, r21
     800:	35 06       	cpc	r3, r21
     802:	49 f4       	brne	.+18     	; 0x816 <vfprintf+0x2dc>
     804:	b6 01       	movw	r22, r12
     806:	8e e2       	ldi	r24, 0x2E	; 46
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	2a 8b       	std	Y+18, r18	; 0x12
     80c:	3b 8b       	std	Y+19, r19	; 0x13
     80e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     812:	3b 89       	ldd	r19, Y+19	; 0x13
     814:	2a 89       	ldd	r18, Y+18	; 0x12
     816:	42 14       	cp	r4, r2
     818:	53 04       	cpc	r5, r3
     81a:	6c f0       	brlt	.+26     	; 0x836 <vfprintf+0x2fc>
     81c:	4c 85       	ldd	r20, Y+12	; 0x0c
     81e:	5d 85       	ldd	r21, Y+13	; 0x0d
     820:	42 15       	cp	r20, r2
     822:	53 05       	cpc	r21, r3
     824:	44 f4       	brge	.+16     	; 0x836 <vfprintf+0x2fc>
     826:	ee 85       	ldd	r30, Y+14	; 0x0e
     828:	ff 85       	ldd	r31, Y+15	; 0x0f
     82a:	e2 0f       	add	r30, r18
     82c:	f3 1f       	adc	r31, r19
     82e:	e6 0d       	add	r30, r6
     830:	f7 1d       	adc	r31, r7
     832:	81 81       	ldd	r24, Z+1	; 0x01
     834:	01 c0       	rjmp	.+2      	; 0x838 <vfprintf+0x2fe>
     836:	80 e3       	ldi	r24, 0x30	; 48
     838:	51 e0       	ldi	r21, 0x01	; 1
     83a:	25 1a       	sub	r2, r21
     83c:	31 08       	sbc	r3, r1
     83e:	2f 5f       	subi	r18, 0xFF	; 255
     840:	3f 4f       	sbci	r19, 0xFF	; 255
     842:	48 89       	ldd	r20, Y+16	; 0x10
     844:	59 89       	ldd	r21, Y+17	; 0x11
     846:	24 16       	cp	r2, r20
     848:	35 06       	cpc	r3, r21
     84a:	4c f0       	brlt	.+18     	; 0x85e <vfprintf+0x324>
     84c:	b6 01       	movw	r22, r12
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	2a 8b       	std	Y+18, r18	; 0x12
     852:	3b 8b       	std	Y+19, r19	; 0x13
     854:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     858:	2a 89       	ldd	r18, Y+18	; 0x12
     85a:	3b 89       	ldd	r19, Y+19	; 0x13
     85c:	cf cf       	rjmp	.-98     	; 0x7fc <vfprintf+0x2c2>
     85e:	24 14       	cp	r2, r4
     860:	35 04       	cpc	r3, r5
     862:	39 f4       	brne	.+14     	; 0x872 <vfprintf+0x338>
     864:	9a 81       	ldd	r25, Y+2	; 0x02
     866:	96 33       	cpi	r25, 0x36	; 54
     868:	18 f4       	brcc	.+6      	; 0x870 <vfprintf+0x336>
     86a:	95 33       	cpi	r25, 0x35	; 53
     86c:	11 f4       	brne	.+4      	; 0x872 <vfprintf+0x338>
     86e:	04 ff       	sbrs	r16, 4
     870:	81 e3       	ldi	r24, 0x31	; 49
     872:	b6 01       	movw	r22, r12
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	4b c0       	rjmp	.+150    	; 0x90e <__stack+0xf>
     878:	8a 81       	ldd	r24, Y+2	; 0x02
     87a:	81 33       	cpi	r24, 0x31	; 49
     87c:	09 f0       	breq	.+2      	; 0x880 <vfprintf+0x346>
     87e:	0f 7e       	andi	r16, 0xEF	; 239
     880:	b6 01       	movw	r22, r12
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     888:	11 11       	cpse	r17, r1
     88a:	05 c0       	rjmp	.+10     	; 0x896 <vfprintf+0x35c>
     88c:	34 fc       	sbrc	r3, 4
     88e:	18 c0       	rjmp	.+48     	; 0x8c0 <vfprintf+0x386>
     890:	85 e6       	ldi	r24, 0x65	; 101
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	17 c0       	rjmp	.+46     	; 0x8c4 <vfprintf+0x38a>
     896:	b6 01       	movw	r22, r12
     898:	8e e2       	ldi	r24, 0x2E	; 46
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     8a0:	82 e0       	ldi	r24, 0x02	; 2
     8a2:	ee 24       	eor	r14, r14
     8a4:	e3 94       	inc	r14
     8a6:	e8 0e       	add	r14, r24
     8a8:	f3 01       	movw	r30, r6
     8aa:	e8 0f       	add	r30, r24
     8ac:	f1 1d       	adc	r31, r1
     8ae:	80 81       	ld	r24, Z
     8b0:	b6 01       	movw	r22, r12
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     8b8:	11 50       	subi	r17, 0x01	; 1
     8ba:	8e 2d       	mov	r24, r14
     8bc:	91 f7       	brne	.-28     	; 0x8a2 <vfprintf+0x368>
     8be:	e6 cf       	rjmp	.-52     	; 0x88c <vfprintf+0x352>
     8c0:	85 e4       	ldi	r24, 0x45	; 69
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	b6 01       	movw	r22, r12
     8c6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     8ca:	57 fc       	sbrc	r5, 7
     8cc:	05 c0       	rjmp	.+10     	; 0x8d8 <vfprintf+0x39e>
     8ce:	41 14       	cp	r4, r1
     8d0:	51 04       	cpc	r5, r1
     8d2:	39 f4       	brne	.+14     	; 0x8e2 <vfprintf+0x3a8>
     8d4:	04 ff       	sbrs	r16, 4
     8d6:	05 c0       	rjmp	.+10     	; 0x8e2 <vfprintf+0x3a8>
     8d8:	51 94       	neg	r5
     8da:	41 94       	neg	r4
     8dc:	51 08       	sbc	r5, r1
     8de:	8d e2       	ldi	r24, 0x2D	; 45
     8e0:	01 c0       	rjmp	.+2      	; 0x8e4 <vfprintf+0x3aa>
     8e2:	8b e2       	ldi	r24, 0x2B	; 43
     8e4:	b6 01       	movw	r22, r12
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     8ec:	80 e3       	ldi	r24, 0x30	; 48
     8ee:	9a e0       	ldi	r25, 0x0A	; 10
     8f0:	49 16       	cp	r4, r25
     8f2:	51 04       	cpc	r5, r1
     8f4:	2c f0       	brlt	.+10     	; 0x900 <__stack+0x1>
     8f6:	8f 5f       	subi	r24, 0xFF	; 255
     8f8:	5a e0       	ldi	r21, 0x0A	; 10
     8fa:	45 1a       	sub	r4, r21
     8fc:	51 08       	sbc	r5, r1
     8fe:	f7 cf       	rjmp	.-18     	; 0x8ee <vfprintf+0x3b4>
     900:	b6 01       	movw	r22, r12
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     908:	b6 01       	movw	r22, r12
     90a:	c2 01       	movw	r24, r4
     90c:	c0 96       	adiw	r24, 0x30	; 48
     90e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     912:	57 c1       	rjmp	.+686    	; 0xbc2 <__stack+0x2c3>
     914:	83 36       	cpi	r24, 0x63	; 99
     916:	31 f0       	breq	.+12     	; 0x924 <__stack+0x25>
     918:	83 37       	cpi	r24, 0x73	; 115
     91a:	79 f0       	breq	.+30     	; 0x93a <__stack+0x3b>
     91c:	83 35       	cpi	r24, 0x53	; 83
     91e:	09 f0       	breq	.+2      	; 0x922 <__stack+0x23>
     920:	58 c0       	rjmp	.+176    	; 0x9d2 <__stack+0xd3>
     922:	21 c0       	rjmp	.+66     	; 0x966 <__stack+0x67>
     924:	52 01       	movw	r10, r4
     926:	e2 e0       	ldi	r30, 0x02	; 2
     928:	ae 0e       	add	r10, r30
     92a:	b1 1c       	adc	r11, r1
     92c:	f2 01       	movw	r30, r4
     92e:	80 81       	ld	r24, Z
     930:	89 83       	std	Y+1, r24	; 0x01
     932:	01 e0       	ldi	r16, 0x01	; 1
     934:	10 e0       	ldi	r17, 0x00	; 0
     936:	23 01       	movw	r4, r6
     938:	14 c0       	rjmp	.+40     	; 0x962 <__stack+0x63>
     93a:	52 01       	movw	r10, r4
     93c:	f2 e0       	ldi	r31, 0x02	; 2
     93e:	af 0e       	add	r10, r31
     940:	b1 1c       	adc	r11, r1
     942:	f2 01       	movw	r30, r4
     944:	40 80       	ld	r4, Z
     946:	51 80       	ldd	r5, Z+1	; 0x01
     948:	26 ff       	sbrs	r18, 6
     94a:	03 c0       	rjmp	.+6      	; 0x952 <__stack+0x53>
     94c:	61 2f       	mov	r22, r17
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	02 c0       	rjmp	.+4      	; 0x956 <__stack+0x57>
     952:	6f ef       	ldi	r22, 0xFF	; 255
     954:	7f ef       	ldi	r23, 0xFF	; 255
     956:	c2 01       	movw	r24, r4
     958:	2a 8b       	std	Y+18, r18	; 0x12
     95a:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <strnlen>
     95e:	8c 01       	movw	r16, r24
     960:	2a 89       	ldd	r18, Y+18	; 0x12
     962:	2f 77       	andi	r18, 0x7F	; 127
     964:	15 c0       	rjmp	.+42     	; 0x990 <__stack+0x91>
     966:	52 01       	movw	r10, r4
     968:	f2 e0       	ldi	r31, 0x02	; 2
     96a:	af 0e       	add	r10, r31
     96c:	b1 1c       	adc	r11, r1
     96e:	f2 01       	movw	r30, r4
     970:	40 80       	ld	r4, Z
     972:	51 80       	ldd	r5, Z+1	; 0x01
     974:	26 ff       	sbrs	r18, 6
     976:	03 c0       	rjmp	.+6      	; 0x97e <__stack+0x7f>
     978:	61 2f       	mov	r22, r17
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	02 c0       	rjmp	.+4      	; 0x982 <__stack+0x83>
     97e:	6f ef       	ldi	r22, 0xFF	; 255
     980:	7f ef       	ldi	r23, 0xFF	; 255
     982:	c2 01       	movw	r24, r4
     984:	2a 8b       	std	Y+18, r18	; 0x12
     986:	0e 94 e6 08 	call	0x11cc	; 0x11cc <strnlen_P>
     98a:	8c 01       	movw	r16, r24
     98c:	2a 89       	ldd	r18, Y+18	; 0x12
     98e:	20 68       	ori	r18, 0x80	; 128
     990:	32 2e       	mov	r3, r18
     992:	23 fd       	sbrc	r18, 3
     994:	1a c0       	rjmp	.+52     	; 0x9ca <__stack+0xcb>
     996:	8f 2d       	mov	r24, r15
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	08 17       	cp	r16, r24
     99c:	19 07       	cpc	r17, r25
     99e:	a8 f4       	brcc	.+42     	; 0x9ca <__stack+0xcb>
     9a0:	b6 01       	movw	r22, r12
     9a2:	80 e2       	ldi	r24, 0x20	; 32
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     9aa:	fa 94       	dec	r15
     9ac:	f4 cf       	rjmp	.-24     	; 0x996 <__stack+0x97>
     9ae:	f2 01       	movw	r30, r4
     9b0:	37 fc       	sbrc	r3, 7
     9b2:	85 91       	lpm	r24, Z+
     9b4:	37 fe       	sbrs	r3, 7
     9b6:	81 91       	ld	r24, Z+
     9b8:	2f 01       	movw	r4, r30
     9ba:	b6 01       	movw	r22, r12
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     9c2:	f1 10       	cpse	r15, r1
     9c4:	fa 94       	dec	r15
     9c6:	01 50       	subi	r16, 0x01	; 1
     9c8:	11 09       	sbc	r17, r1
     9ca:	01 15       	cp	r16, r1
     9cc:	11 05       	cpc	r17, r1
     9ce:	79 f7       	brne	.-34     	; 0x9ae <__stack+0xaf>
     9d0:	f8 c0       	rjmp	.+496    	; 0xbc2 <__stack+0x2c3>
     9d2:	84 36       	cpi	r24, 0x64	; 100
     9d4:	11 f0       	breq	.+4      	; 0x9da <__stack+0xdb>
     9d6:	89 36       	cpi	r24, 0x69	; 105
     9d8:	59 f5       	brne	.+86     	; 0xa30 <__stack+0x131>
     9da:	52 01       	movw	r10, r4
     9dc:	27 ff       	sbrs	r18, 7
     9de:	09 c0       	rjmp	.+18     	; 0x9f2 <__stack+0xf3>
     9e0:	f4 e0       	ldi	r31, 0x04	; 4
     9e2:	af 0e       	add	r10, r31
     9e4:	b1 1c       	adc	r11, r1
     9e6:	f2 01       	movw	r30, r4
     9e8:	60 81       	ld	r22, Z
     9ea:	71 81       	ldd	r23, Z+1	; 0x01
     9ec:	82 81       	ldd	r24, Z+2	; 0x02
     9ee:	93 81       	ldd	r25, Z+3	; 0x03
     9f0:	0a c0       	rjmp	.+20     	; 0xa06 <__stack+0x107>
     9f2:	f2 e0       	ldi	r31, 0x02	; 2
     9f4:	af 0e       	add	r10, r31
     9f6:	b1 1c       	adc	r11, r1
     9f8:	f2 01       	movw	r30, r4
     9fa:	60 81       	ld	r22, Z
     9fc:	71 81       	ldd	r23, Z+1	; 0x01
     9fe:	88 27       	eor	r24, r24
     a00:	77 fd       	sbrc	r23, 7
     a02:	80 95       	com	r24
     a04:	98 2f       	mov	r25, r24
     a06:	2f 76       	andi	r18, 0x6F	; 111
     a08:	32 2e       	mov	r3, r18
     a0a:	97 ff       	sbrs	r25, 7
     a0c:	09 c0       	rjmp	.+18     	; 0xa20 <__stack+0x121>
     a0e:	90 95       	com	r25
     a10:	80 95       	com	r24
     a12:	70 95       	com	r23
     a14:	61 95       	neg	r22
     a16:	7f 4f       	sbci	r23, 0xFF	; 255
     a18:	8f 4f       	sbci	r24, 0xFF	; 255
     a1a:	9f 4f       	sbci	r25, 0xFF	; 255
     a1c:	20 68       	ori	r18, 0x80	; 128
     a1e:	32 2e       	mov	r3, r18
     a20:	2a e0       	ldi	r18, 0x0A	; 10
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	a3 01       	movw	r20, r6
     a26:	0e 94 34 09 	call	0x1268	; 0x1268 <__ultoa_invert>
     a2a:	e8 2e       	mov	r14, r24
     a2c:	e6 18       	sub	r14, r6
     a2e:	3f c0       	rjmp	.+126    	; 0xaae <__stack+0x1af>
     a30:	02 2f       	mov	r16, r18
     a32:	85 37       	cpi	r24, 0x75	; 117
     a34:	21 f4       	brne	.+8      	; 0xa3e <__stack+0x13f>
     a36:	0f 7e       	andi	r16, 0xEF	; 239
     a38:	2a e0       	ldi	r18, 0x0A	; 10
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	1d c0       	rjmp	.+58     	; 0xa78 <__stack+0x179>
     a3e:	09 7f       	andi	r16, 0xF9	; 249
     a40:	8f 36       	cpi	r24, 0x6F	; 111
     a42:	91 f0       	breq	.+36     	; 0xa68 <__stack+0x169>
     a44:	18 f4       	brcc	.+6      	; 0xa4c <__stack+0x14d>
     a46:	88 35       	cpi	r24, 0x58	; 88
     a48:	59 f0       	breq	.+22     	; 0xa60 <__stack+0x161>
     a4a:	c5 c0       	rjmp	.+394    	; 0xbd6 <__stack+0x2d7>
     a4c:	80 37       	cpi	r24, 0x70	; 112
     a4e:	19 f0       	breq	.+6      	; 0xa56 <__stack+0x157>
     a50:	88 37       	cpi	r24, 0x78	; 120
     a52:	11 f0       	breq	.+4      	; 0xa58 <__stack+0x159>
     a54:	c0 c0       	rjmp	.+384    	; 0xbd6 <__stack+0x2d7>
     a56:	00 61       	ori	r16, 0x10	; 16
     a58:	04 ff       	sbrs	r16, 4
     a5a:	09 c0       	rjmp	.+18     	; 0xa6e <__stack+0x16f>
     a5c:	04 60       	ori	r16, 0x04	; 4
     a5e:	07 c0       	rjmp	.+14     	; 0xa6e <__stack+0x16f>
     a60:	24 ff       	sbrs	r18, 4
     a62:	08 c0       	rjmp	.+16     	; 0xa74 <__stack+0x175>
     a64:	06 60       	ori	r16, 0x06	; 6
     a66:	06 c0       	rjmp	.+12     	; 0xa74 <__stack+0x175>
     a68:	28 e0       	ldi	r18, 0x08	; 8
     a6a:	30 e0       	ldi	r19, 0x00	; 0
     a6c:	05 c0       	rjmp	.+10     	; 0xa78 <__stack+0x179>
     a6e:	20 e1       	ldi	r18, 0x10	; 16
     a70:	30 e0       	ldi	r19, 0x00	; 0
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <__stack+0x179>
     a74:	20 e1       	ldi	r18, 0x10	; 16
     a76:	32 e0       	ldi	r19, 0x02	; 2
     a78:	52 01       	movw	r10, r4
     a7a:	07 ff       	sbrs	r16, 7
     a7c:	09 c0       	rjmp	.+18     	; 0xa90 <__stack+0x191>
     a7e:	f4 e0       	ldi	r31, 0x04	; 4
     a80:	af 0e       	add	r10, r31
     a82:	b1 1c       	adc	r11, r1
     a84:	f2 01       	movw	r30, r4
     a86:	60 81       	ld	r22, Z
     a88:	71 81       	ldd	r23, Z+1	; 0x01
     a8a:	82 81       	ldd	r24, Z+2	; 0x02
     a8c:	93 81       	ldd	r25, Z+3	; 0x03
     a8e:	08 c0       	rjmp	.+16     	; 0xaa0 <__stack+0x1a1>
     a90:	f2 e0       	ldi	r31, 0x02	; 2
     a92:	af 0e       	add	r10, r31
     a94:	b1 1c       	adc	r11, r1
     a96:	f2 01       	movw	r30, r4
     a98:	60 81       	ld	r22, Z
     a9a:	71 81       	ldd	r23, Z+1	; 0x01
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	a3 01       	movw	r20, r6
     aa2:	0e 94 34 09 	call	0x1268	; 0x1268 <__ultoa_invert>
     aa6:	e8 2e       	mov	r14, r24
     aa8:	e6 18       	sub	r14, r6
     aaa:	0f 77       	andi	r16, 0x7F	; 127
     aac:	30 2e       	mov	r3, r16
     aae:	36 fe       	sbrs	r3, 6
     ab0:	0b c0       	rjmp	.+22     	; 0xac8 <__stack+0x1c9>
     ab2:	33 2d       	mov	r19, r3
     ab4:	3e 7f       	andi	r19, 0xFE	; 254
     ab6:	e1 16       	cp	r14, r17
     ab8:	50 f4       	brcc	.+20     	; 0xace <__stack+0x1cf>
     aba:	34 fe       	sbrs	r3, 4
     abc:	0a c0       	rjmp	.+20     	; 0xad2 <__stack+0x1d3>
     abe:	32 fc       	sbrc	r3, 2
     ac0:	08 c0       	rjmp	.+16     	; 0xad2 <__stack+0x1d3>
     ac2:	33 2d       	mov	r19, r3
     ac4:	3e 7e       	andi	r19, 0xEE	; 238
     ac6:	05 c0       	rjmp	.+10     	; 0xad2 <__stack+0x1d3>
     ac8:	0e 2d       	mov	r16, r14
     aca:	33 2d       	mov	r19, r3
     acc:	03 c0       	rjmp	.+6      	; 0xad4 <__stack+0x1d5>
     ace:	0e 2d       	mov	r16, r14
     ad0:	01 c0       	rjmp	.+2      	; 0xad4 <__stack+0x1d5>
     ad2:	01 2f       	mov	r16, r17
     ad4:	34 ff       	sbrs	r19, 4
     ad6:	0c c0       	rjmp	.+24     	; 0xaf0 <__stack+0x1f1>
     ad8:	fe 01       	movw	r30, r28
     ada:	ee 0d       	add	r30, r14
     adc:	f1 1d       	adc	r31, r1
     ade:	80 81       	ld	r24, Z
     ae0:	80 33       	cpi	r24, 0x30	; 48
     ae2:	11 f4       	brne	.+4      	; 0xae8 <__stack+0x1e9>
     ae4:	39 7e       	andi	r19, 0xE9	; 233
     ae6:	08 c0       	rjmp	.+16     	; 0xaf8 <__stack+0x1f9>
     ae8:	32 ff       	sbrs	r19, 2
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__stack+0x1f7>
     aec:	0e 5f       	subi	r16, 0xFE	; 254
     aee:	04 c0       	rjmp	.+8      	; 0xaf8 <__stack+0x1f9>
     af0:	83 2f       	mov	r24, r19
     af2:	86 78       	andi	r24, 0x86	; 134
     af4:	09 f0       	breq	.+2      	; 0xaf8 <__stack+0x1f9>
     af6:	0f 5f       	subi	r16, 0xFF	; 255
     af8:	33 fd       	sbrc	r19, 3
     afa:	13 c0       	rjmp	.+38     	; 0xb22 <__stack+0x223>
     afc:	30 ff       	sbrs	r19, 0
     afe:	06 c0       	rjmp	.+12     	; 0xb0c <__stack+0x20d>
     b00:	1e 2d       	mov	r17, r14
     b02:	0f 15       	cp	r16, r15
     b04:	18 f4       	brcc	.+6      	; 0xb0c <__stack+0x20d>
     b06:	1f 0d       	add	r17, r15
     b08:	10 1b       	sub	r17, r16
     b0a:	0f 2d       	mov	r16, r15
     b0c:	0f 15       	cp	r16, r15
     b0e:	68 f4       	brcc	.+26     	; 0xb2a <__stack+0x22b>
     b10:	b6 01       	movw	r22, r12
     b12:	80 e2       	ldi	r24, 0x20	; 32
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	3b 8b       	std	Y+19, r19	; 0x13
     b18:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     b1c:	0f 5f       	subi	r16, 0xFF	; 255
     b1e:	3b 89       	ldd	r19, Y+19	; 0x13
     b20:	f5 cf       	rjmp	.-22     	; 0xb0c <__stack+0x20d>
     b22:	0f 15       	cp	r16, r15
     b24:	10 f4       	brcc	.+4      	; 0xb2a <__stack+0x22b>
     b26:	f0 1a       	sub	r15, r16
     b28:	01 c0       	rjmp	.+2      	; 0xb2c <__stack+0x22d>
     b2a:	f1 2c       	mov	r15, r1
     b2c:	34 ff       	sbrs	r19, 4
     b2e:	12 c0       	rjmp	.+36     	; 0xb54 <__stack+0x255>
     b30:	b6 01       	movw	r22, r12
     b32:	80 e3       	ldi	r24, 0x30	; 48
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	3b 8b       	std	Y+19, r19	; 0x13
     b38:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     b3c:	3b 89       	ldd	r19, Y+19	; 0x13
     b3e:	32 ff       	sbrs	r19, 2
     b40:	17 c0       	rjmp	.+46     	; 0xb70 <__stack+0x271>
     b42:	31 fd       	sbrc	r19, 1
     b44:	03 c0       	rjmp	.+6      	; 0xb4c <__stack+0x24d>
     b46:	88 e7       	ldi	r24, 0x78	; 120
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	02 c0       	rjmp	.+4      	; 0xb50 <__stack+0x251>
     b4c:	88 e5       	ldi	r24, 0x58	; 88
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	b6 01       	movw	r22, r12
     b52:	0c c0       	rjmp	.+24     	; 0xb6c <__stack+0x26d>
     b54:	83 2f       	mov	r24, r19
     b56:	86 78       	andi	r24, 0x86	; 134
     b58:	59 f0       	breq	.+22     	; 0xb70 <__stack+0x271>
     b5a:	31 ff       	sbrs	r19, 1
     b5c:	02 c0       	rjmp	.+4      	; 0xb62 <__stack+0x263>
     b5e:	8b e2       	ldi	r24, 0x2B	; 43
     b60:	01 c0       	rjmp	.+2      	; 0xb64 <__stack+0x265>
     b62:	80 e2       	ldi	r24, 0x20	; 32
     b64:	37 fd       	sbrc	r19, 7
     b66:	8d e2       	ldi	r24, 0x2D	; 45
     b68:	b6 01       	movw	r22, r12
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     b70:	e1 16       	cp	r14, r17
     b72:	38 f4       	brcc	.+14     	; 0xb82 <__stack+0x283>
     b74:	b6 01       	movw	r22, r12
     b76:	80 e3       	ldi	r24, 0x30	; 48
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     b7e:	11 50       	subi	r17, 0x01	; 1
     b80:	f7 cf       	rjmp	.-18     	; 0xb70 <__stack+0x271>
     b82:	ea 94       	dec	r14
     b84:	f3 01       	movw	r30, r6
     b86:	ee 0d       	add	r30, r14
     b88:	f1 1d       	adc	r31, r1
     b8a:	80 81       	ld	r24, Z
     b8c:	b6 01       	movw	r22, r12
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     b94:	e1 10       	cpse	r14, r1
     b96:	f5 cf       	rjmp	.-22     	; 0xb82 <__stack+0x283>
     b98:	14 c0       	rjmp	.+40     	; 0xbc2 <__stack+0x2c3>
     b9a:	f4 e0       	ldi	r31, 0x04	; 4
     b9c:	ff 15       	cp	r31, r15
     b9e:	58 f5       	brcc	.+86     	; 0xbf6 <__stack+0x2f7>
     ba0:	84 e0       	ldi	r24, 0x04	; 4
     ba2:	f8 1a       	sub	r15, r24
     ba4:	33 fe       	sbrs	r3, 3
     ba6:	1e c0       	rjmp	.+60     	; 0xbe4 <__stack+0x2e5>
     ba8:	21 10       	cpse	r2, r1
     baa:	26 c0       	rjmp	.+76     	; 0xbf8 <__stack+0x2f9>
     bac:	03 ff       	sbrs	r16, 3
     bae:	2a c0       	rjmp	.+84     	; 0xc04 <__stack+0x305>
     bb0:	08 e6       	ldi	r16, 0x68	; 104
     bb2:	10 e0       	ldi	r17, 0x00	; 0
     bb4:	f3 2d       	mov	r31, r3
     bb6:	f0 71       	andi	r31, 0x10	; 16
     bb8:	3f 2e       	mov	r3, r31
     bba:	f8 01       	movw	r30, r16
     bbc:	84 91       	lpm	r24, Z
     bbe:	81 11       	cpse	r24, r1
     bc0:	24 c0       	rjmp	.+72     	; 0xc0a <__stack+0x30b>
     bc2:	ff 20       	and	r15, r15
     bc4:	09 f4       	brne	.+2      	; 0xbc8 <__stack+0x2c9>
     bc6:	e5 cc       	rjmp	.-1590   	; 0x592 <vfprintf+0x58>
     bc8:	b6 01       	movw	r22, r12
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     bd2:	fa 94       	dec	r15
     bd4:	f6 cf       	rjmp	.-20     	; 0xbc2 <__stack+0x2c3>
     bd6:	f6 01       	movw	r30, r12
     bd8:	86 81       	ldd	r24, Z+6	; 0x06
     bda:	97 81       	ldd	r25, Z+7	; 0x07
     bdc:	26 c0       	rjmp	.+76     	; 0xc2a <__stack+0x32b>
     bde:	8f ef       	ldi	r24, 0xFF	; 255
     be0:	9f ef       	ldi	r25, 0xFF	; 255
     be2:	23 c0       	rjmp	.+70     	; 0xc2a <__stack+0x32b>
     be4:	b6 01       	movw	r22, r12
     be6:	80 e2       	ldi	r24, 0x20	; 32
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     bee:	fa 94       	dec	r15
     bf0:	f1 10       	cpse	r15, r1
     bf2:	f8 cf       	rjmp	.-16     	; 0xbe4 <__stack+0x2e5>
     bf4:	d9 cf       	rjmp	.-78     	; 0xba8 <__stack+0x2a9>
     bf6:	f1 2c       	mov	r15, r1
     bf8:	b6 01       	movw	r22, r12
     bfa:	82 2d       	mov	r24, r2
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     c02:	d4 cf       	rjmp	.-88     	; 0xbac <__stack+0x2ad>
     c04:	0c e6       	ldi	r16, 0x6C	; 108
     c06:	10 e0       	ldi	r17, 0x00	; 0
     c08:	d5 cf       	rjmp	.-86     	; 0xbb4 <__stack+0x2b5>
     c0a:	31 10       	cpse	r3, r1
     c0c:	80 52       	subi	r24, 0x20	; 32
     c0e:	b6 01       	movw	r22, r12
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <fputc>
     c16:	0f 5f       	subi	r16, 0xFF	; 255
     c18:	1f 4f       	sbci	r17, 0xFF	; 255
     c1a:	cf cf       	rjmp	.-98     	; 0xbba <__stack+0x2bb>
     c1c:	23 e0       	ldi	r18, 0x03	; 3
     c1e:	2f 15       	cp	r18, r15
     c20:	10 f4       	brcc	.+4      	; 0xc26 <__stack+0x327>
     c22:	83 e0       	ldi	r24, 0x03	; 3
     c24:	be cf       	rjmp	.-132    	; 0xba2 <__stack+0x2a3>
     c26:	f1 2c       	mov	r15, r1
     c28:	c1 cf       	rjmp	.-126    	; 0xbac <__stack+0x2ad>
     c2a:	63 96       	adiw	r28, 0x13	; 19
     c2c:	e2 e1       	ldi	r30, 0x12	; 18
     c2e:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <__epilogue_restores__>

00000c32 <__subsf3>:
     c32:	50 58       	subi	r21, 0x80	; 128

00000c34 <__addsf3>:
     c34:	bb 27       	eor	r27, r27
     c36:	aa 27       	eor	r26, r26
     c38:	0e d0       	rcall	.+28     	; 0xc56 <__addsf3x>
     c3a:	1c c1       	rjmp	.+568    	; 0xe74 <__fp_round>
     c3c:	0d d1       	rcall	.+538    	; 0xe58 <__fp_pscA>
     c3e:	30 f0       	brcs	.+12     	; 0xc4c <__addsf3+0x18>
     c40:	12 d1       	rcall	.+548    	; 0xe66 <__fp_pscB>
     c42:	20 f0       	brcs	.+8      	; 0xc4c <__addsf3+0x18>
     c44:	31 f4       	brne	.+12     	; 0xc52 <__addsf3+0x1e>
     c46:	9f 3f       	cpi	r25, 0xFF	; 255
     c48:	11 f4       	brne	.+4      	; 0xc4e <__addsf3+0x1a>
     c4a:	1e f4       	brtc	.+6      	; 0xc52 <__addsf3+0x1e>
     c4c:	02 c1       	rjmp	.+516    	; 0xe52 <__fp_nan>
     c4e:	0e f4       	brtc	.+2      	; 0xc52 <__addsf3+0x1e>
     c50:	e0 95       	com	r30
     c52:	e7 fb       	bst	r30, 7
     c54:	f8 c0       	rjmp	.+496    	; 0xe46 <__fp_inf>

00000c56 <__addsf3x>:
     c56:	e9 2f       	mov	r30, r25
     c58:	1e d1       	rcall	.+572    	; 0xe96 <__fp_split3>
     c5a:	80 f3       	brcs	.-32     	; 0xc3c <__addsf3+0x8>
     c5c:	ba 17       	cp	r27, r26
     c5e:	62 07       	cpc	r22, r18
     c60:	73 07       	cpc	r23, r19
     c62:	84 07       	cpc	r24, r20
     c64:	95 07       	cpc	r25, r21
     c66:	18 f0       	brcs	.+6      	; 0xc6e <__addsf3x+0x18>
     c68:	71 f4       	brne	.+28     	; 0xc86 <__addsf3x+0x30>
     c6a:	9e f5       	brtc	.+102    	; 0xcd2 <__addsf3x+0x7c>
     c6c:	36 c1       	rjmp	.+620    	; 0xeda <__fp_zero>
     c6e:	0e f4       	brtc	.+2      	; 0xc72 <__addsf3x+0x1c>
     c70:	e0 95       	com	r30
     c72:	0b 2e       	mov	r0, r27
     c74:	ba 2f       	mov	r27, r26
     c76:	a0 2d       	mov	r26, r0
     c78:	0b 01       	movw	r0, r22
     c7a:	b9 01       	movw	r22, r18
     c7c:	90 01       	movw	r18, r0
     c7e:	0c 01       	movw	r0, r24
     c80:	ca 01       	movw	r24, r20
     c82:	a0 01       	movw	r20, r0
     c84:	11 24       	eor	r1, r1
     c86:	ff 27       	eor	r31, r31
     c88:	59 1b       	sub	r21, r25
     c8a:	99 f0       	breq	.+38     	; 0xcb2 <__addsf3x+0x5c>
     c8c:	59 3f       	cpi	r21, 0xF9	; 249
     c8e:	50 f4       	brcc	.+20     	; 0xca4 <__addsf3x+0x4e>
     c90:	50 3e       	cpi	r21, 0xE0	; 224
     c92:	68 f1       	brcs	.+90     	; 0xcee <__addsf3x+0x98>
     c94:	1a 16       	cp	r1, r26
     c96:	f0 40       	sbci	r31, 0x00	; 0
     c98:	a2 2f       	mov	r26, r18
     c9a:	23 2f       	mov	r18, r19
     c9c:	34 2f       	mov	r19, r20
     c9e:	44 27       	eor	r20, r20
     ca0:	58 5f       	subi	r21, 0xF8	; 248
     ca2:	f3 cf       	rjmp	.-26     	; 0xc8a <__addsf3x+0x34>
     ca4:	46 95       	lsr	r20
     ca6:	37 95       	ror	r19
     ca8:	27 95       	ror	r18
     caa:	a7 95       	ror	r26
     cac:	f0 40       	sbci	r31, 0x00	; 0
     cae:	53 95       	inc	r21
     cb0:	c9 f7       	brne	.-14     	; 0xca4 <__addsf3x+0x4e>
     cb2:	7e f4       	brtc	.+30     	; 0xcd2 <__addsf3x+0x7c>
     cb4:	1f 16       	cp	r1, r31
     cb6:	ba 0b       	sbc	r27, r26
     cb8:	62 0b       	sbc	r22, r18
     cba:	73 0b       	sbc	r23, r19
     cbc:	84 0b       	sbc	r24, r20
     cbe:	ba f0       	brmi	.+46     	; 0xcee <__addsf3x+0x98>
     cc0:	91 50       	subi	r25, 0x01	; 1
     cc2:	a1 f0       	breq	.+40     	; 0xcec <__addsf3x+0x96>
     cc4:	ff 0f       	add	r31, r31
     cc6:	bb 1f       	adc	r27, r27
     cc8:	66 1f       	adc	r22, r22
     cca:	77 1f       	adc	r23, r23
     ccc:	88 1f       	adc	r24, r24
     cce:	c2 f7       	brpl	.-16     	; 0xcc0 <__addsf3x+0x6a>
     cd0:	0e c0       	rjmp	.+28     	; 0xcee <__addsf3x+0x98>
     cd2:	ba 0f       	add	r27, r26
     cd4:	62 1f       	adc	r22, r18
     cd6:	73 1f       	adc	r23, r19
     cd8:	84 1f       	adc	r24, r20
     cda:	48 f4       	brcc	.+18     	; 0xcee <__addsf3x+0x98>
     cdc:	87 95       	ror	r24
     cde:	77 95       	ror	r23
     ce0:	67 95       	ror	r22
     ce2:	b7 95       	ror	r27
     ce4:	f7 95       	ror	r31
     ce6:	9e 3f       	cpi	r25, 0xFE	; 254
     ce8:	08 f0       	brcs	.+2      	; 0xcec <__addsf3x+0x96>
     cea:	b3 cf       	rjmp	.-154    	; 0xc52 <__addsf3+0x1e>
     cec:	93 95       	inc	r25
     cee:	88 0f       	add	r24, r24
     cf0:	08 f0       	brcs	.+2      	; 0xcf4 <__addsf3x+0x9e>
     cf2:	99 27       	eor	r25, r25
     cf4:	ee 0f       	add	r30, r30
     cf6:	97 95       	ror	r25
     cf8:	87 95       	ror	r24
     cfa:	08 95       	ret

00000cfc <__divsf3>:
     cfc:	0c d0       	rcall	.+24     	; 0xd16 <__divsf3x>
     cfe:	ba c0       	rjmp	.+372    	; 0xe74 <__fp_round>
     d00:	b2 d0       	rcall	.+356    	; 0xe66 <__fp_pscB>
     d02:	40 f0       	brcs	.+16     	; 0xd14 <__divsf3+0x18>
     d04:	a9 d0       	rcall	.+338    	; 0xe58 <__fp_pscA>
     d06:	30 f0       	brcs	.+12     	; 0xd14 <__divsf3+0x18>
     d08:	21 f4       	brne	.+8      	; 0xd12 <__divsf3+0x16>
     d0a:	5f 3f       	cpi	r21, 0xFF	; 255
     d0c:	19 f0       	breq	.+6      	; 0xd14 <__divsf3+0x18>
     d0e:	9b c0       	rjmp	.+310    	; 0xe46 <__fp_inf>
     d10:	51 11       	cpse	r21, r1
     d12:	e4 c0       	rjmp	.+456    	; 0xedc <__fp_szero>
     d14:	9e c0       	rjmp	.+316    	; 0xe52 <__fp_nan>

00000d16 <__divsf3x>:
     d16:	bf d0       	rcall	.+382    	; 0xe96 <__fp_split3>
     d18:	98 f3       	brcs	.-26     	; 0xd00 <__divsf3+0x4>

00000d1a <__divsf3_pse>:
     d1a:	99 23       	and	r25, r25
     d1c:	c9 f3       	breq	.-14     	; 0xd10 <__divsf3+0x14>
     d1e:	55 23       	and	r21, r21
     d20:	b1 f3       	breq	.-20     	; 0xd0e <__divsf3+0x12>
     d22:	95 1b       	sub	r25, r21
     d24:	55 0b       	sbc	r21, r21
     d26:	bb 27       	eor	r27, r27
     d28:	aa 27       	eor	r26, r26
     d2a:	62 17       	cp	r22, r18
     d2c:	73 07       	cpc	r23, r19
     d2e:	84 07       	cpc	r24, r20
     d30:	38 f0       	brcs	.+14     	; 0xd40 <__divsf3_pse+0x26>
     d32:	9f 5f       	subi	r25, 0xFF	; 255
     d34:	5f 4f       	sbci	r21, 0xFF	; 255
     d36:	22 0f       	add	r18, r18
     d38:	33 1f       	adc	r19, r19
     d3a:	44 1f       	adc	r20, r20
     d3c:	aa 1f       	adc	r26, r26
     d3e:	a9 f3       	breq	.-22     	; 0xd2a <__divsf3_pse+0x10>
     d40:	33 d0       	rcall	.+102    	; 0xda8 <__divsf3_pse+0x8e>
     d42:	0e 2e       	mov	r0, r30
     d44:	3a f0       	brmi	.+14     	; 0xd54 <__divsf3_pse+0x3a>
     d46:	e0 e8       	ldi	r30, 0x80	; 128
     d48:	30 d0       	rcall	.+96     	; 0xdaa <__divsf3_pse+0x90>
     d4a:	91 50       	subi	r25, 0x01	; 1
     d4c:	50 40       	sbci	r21, 0x00	; 0
     d4e:	e6 95       	lsr	r30
     d50:	00 1c       	adc	r0, r0
     d52:	ca f7       	brpl	.-14     	; 0xd46 <__divsf3_pse+0x2c>
     d54:	29 d0       	rcall	.+82     	; 0xda8 <__divsf3_pse+0x8e>
     d56:	fe 2f       	mov	r31, r30
     d58:	27 d0       	rcall	.+78     	; 0xda8 <__divsf3_pse+0x8e>
     d5a:	66 0f       	add	r22, r22
     d5c:	77 1f       	adc	r23, r23
     d5e:	88 1f       	adc	r24, r24
     d60:	bb 1f       	adc	r27, r27
     d62:	26 17       	cp	r18, r22
     d64:	37 07       	cpc	r19, r23
     d66:	48 07       	cpc	r20, r24
     d68:	ab 07       	cpc	r26, r27
     d6a:	b0 e8       	ldi	r27, 0x80	; 128
     d6c:	09 f0       	breq	.+2      	; 0xd70 <__divsf3_pse+0x56>
     d6e:	bb 0b       	sbc	r27, r27
     d70:	80 2d       	mov	r24, r0
     d72:	bf 01       	movw	r22, r30
     d74:	ff 27       	eor	r31, r31
     d76:	93 58       	subi	r25, 0x83	; 131
     d78:	5f 4f       	sbci	r21, 0xFF	; 255
     d7a:	2a f0       	brmi	.+10     	; 0xd86 <__divsf3_pse+0x6c>
     d7c:	9e 3f       	cpi	r25, 0xFE	; 254
     d7e:	51 05       	cpc	r21, r1
     d80:	68 f0       	brcs	.+26     	; 0xd9c <__divsf3_pse+0x82>
     d82:	61 c0       	rjmp	.+194    	; 0xe46 <__fp_inf>
     d84:	ab c0       	rjmp	.+342    	; 0xedc <__fp_szero>
     d86:	5f 3f       	cpi	r21, 0xFF	; 255
     d88:	ec f3       	brlt	.-6      	; 0xd84 <__divsf3_pse+0x6a>
     d8a:	98 3e       	cpi	r25, 0xE8	; 232
     d8c:	dc f3       	brlt	.-10     	; 0xd84 <__divsf3_pse+0x6a>
     d8e:	86 95       	lsr	r24
     d90:	77 95       	ror	r23
     d92:	67 95       	ror	r22
     d94:	b7 95       	ror	r27
     d96:	f7 95       	ror	r31
     d98:	9f 5f       	subi	r25, 0xFF	; 255
     d9a:	c9 f7       	brne	.-14     	; 0xd8e <__divsf3_pse+0x74>
     d9c:	88 0f       	add	r24, r24
     d9e:	91 1d       	adc	r25, r1
     da0:	96 95       	lsr	r25
     da2:	87 95       	ror	r24
     da4:	97 f9       	bld	r25, 7
     da6:	08 95       	ret
     da8:	e1 e0       	ldi	r30, 0x01	; 1
     daa:	66 0f       	add	r22, r22
     dac:	77 1f       	adc	r23, r23
     dae:	88 1f       	adc	r24, r24
     db0:	bb 1f       	adc	r27, r27
     db2:	62 17       	cp	r22, r18
     db4:	73 07       	cpc	r23, r19
     db6:	84 07       	cpc	r24, r20
     db8:	ba 07       	cpc	r27, r26
     dba:	20 f0       	brcs	.+8      	; 0xdc4 <__divsf3_pse+0xaa>
     dbc:	62 1b       	sub	r22, r18
     dbe:	73 0b       	sbc	r23, r19
     dc0:	84 0b       	sbc	r24, r20
     dc2:	ba 0b       	sbc	r27, r26
     dc4:	ee 1f       	adc	r30, r30
     dc6:	88 f7       	brcc	.-30     	; 0xdaa <__divsf3_pse+0x90>
     dc8:	e0 95       	com	r30
     dca:	08 95       	ret

00000dcc <__floatunsisf>:
     dcc:	e8 94       	clt
     dce:	09 c0       	rjmp	.+18     	; 0xde2 <__floatsisf+0x12>

00000dd0 <__floatsisf>:
     dd0:	97 fb       	bst	r25, 7
     dd2:	3e f4       	brtc	.+14     	; 0xde2 <__floatsisf+0x12>
     dd4:	90 95       	com	r25
     dd6:	80 95       	com	r24
     dd8:	70 95       	com	r23
     dda:	61 95       	neg	r22
     ddc:	7f 4f       	sbci	r23, 0xFF	; 255
     dde:	8f 4f       	sbci	r24, 0xFF	; 255
     de0:	9f 4f       	sbci	r25, 0xFF	; 255
     de2:	99 23       	and	r25, r25
     de4:	a9 f0       	breq	.+42     	; 0xe10 <__floatsisf+0x40>
     de6:	f9 2f       	mov	r31, r25
     de8:	96 e9       	ldi	r25, 0x96	; 150
     dea:	bb 27       	eor	r27, r27
     dec:	93 95       	inc	r25
     dee:	f6 95       	lsr	r31
     df0:	87 95       	ror	r24
     df2:	77 95       	ror	r23
     df4:	67 95       	ror	r22
     df6:	b7 95       	ror	r27
     df8:	f1 11       	cpse	r31, r1
     dfa:	f8 cf       	rjmp	.-16     	; 0xdec <__floatsisf+0x1c>
     dfc:	fa f4       	brpl	.+62     	; 0xe3c <__floatsisf+0x6c>
     dfe:	bb 0f       	add	r27, r27
     e00:	11 f4       	brne	.+4      	; 0xe06 <__floatsisf+0x36>
     e02:	60 ff       	sbrs	r22, 0
     e04:	1b c0       	rjmp	.+54     	; 0xe3c <__floatsisf+0x6c>
     e06:	6f 5f       	subi	r22, 0xFF	; 255
     e08:	7f 4f       	sbci	r23, 0xFF	; 255
     e0a:	8f 4f       	sbci	r24, 0xFF	; 255
     e0c:	9f 4f       	sbci	r25, 0xFF	; 255
     e0e:	16 c0       	rjmp	.+44     	; 0xe3c <__floatsisf+0x6c>
     e10:	88 23       	and	r24, r24
     e12:	11 f0       	breq	.+4      	; 0xe18 <__floatsisf+0x48>
     e14:	96 e9       	ldi	r25, 0x96	; 150
     e16:	11 c0       	rjmp	.+34     	; 0xe3a <__floatsisf+0x6a>
     e18:	77 23       	and	r23, r23
     e1a:	21 f0       	breq	.+8      	; 0xe24 <__floatsisf+0x54>
     e1c:	9e e8       	ldi	r25, 0x8E	; 142
     e1e:	87 2f       	mov	r24, r23
     e20:	76 2f       	mov	r23, r22
     e22:	05 c0       	rjmp	.+10     	; 0xe2e <__floatsisf+0x5e>
     e24:	66 23       	and	r22, r22
     e26:	71 f0       	breq	.+28     	; 0xe44 <__floatsisf+0x74>
     e28:	96 e8       	ldi	r25, 0x86	; 134
     e2a:	86 2f       	mov	r24, r22
     e2c:	70 e0       	ldi	r23, 0x00	; 0
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	2a f0       	brmi	.+10     	; 0xe3c <__floatsisf+0x6c>
     e32:	9a 95       	dec	r25
     e34:	66 0f       	add	r22, r22
     e36:	77 1f       	adc	r23, r23
     e38:	88 1f       	adc	r24, r24
     e3a:	da f7       	brpl	.-10     	; 0xe32 <__floatsisf+0x62>
     e3c:	88 0f       	add	r24, r24
     e3e:	96 95       	lsr	r25
     e40:	87 95       	ror	r24
     e42:	97 f9       	bld	r25, 7
     e44:	08 95       	ret

00000e46 <__fp_inf>:
     e46:	97 f9       	bld	r25, 7
     e48:	9f 67       	ori	r25, 0x7F	; 127
     e4a:	80 e8       	ldi	r24, 0x80	; 128
     e4c:	70 e0       	ldi	r23, 0x00	; 0
     e4e:	60 e0       	ldi	r22, 0x00	; 0
     e50:	08 95       	ret

00000e52 <__fp_nan>:
     e52:	9f ef       	ldi	r25, 0xFF	; 255
     e54:	80 ec       	ldi	r24, 0xC0	; 192
     e56:	08 95       	ret

00000e58 <__fp_pscA>:
     e58:	00 24       	eor	r0, r0
     e5a:	0a 94       	dec	r0
     e5c:	16 16       	cp	r1, r22
     e5e:	17 06       	cpc	r1, r23
     e60:	18 06       	cpc	r1, r24
     e62:	09 06       	cpc	r0, r25
     e64:	08 95       	ret

00000e66 <__fp_pscB>:
     e66:	00 24       	eor	r0, r0
     e68:	0a 94       	dec	r0
     e6a:	12 16       	cp	r1, r18
     e6c:	13 06       	cpc	r1, r19
     e6e:	14 06       	cpc	r1, r20
     e70:	05 06       	cpc	r0, r21
     e72:	08 95       	ret

00000e74 <__fp_round>:
     e74:	09 2e       	mov	r0, r25
     e76:	03 94       	inc	r0
     e78:	00 0c       	add	r0, r0
     e7a:	11 f4       	brne	.+4      	; 0xe80 <__fp_round+0xc>
     e7c:	88 23       	and	r24, r24
     e7e:	52 f0       	brmi	.+20     	; 0xe94 <__fp_round+0x20>
     e80:	bb 0f       	add	r27, r27
     e82:	40 f4       	brcc	.+16     	; 0xe94 <__fp_round+0x20>
     e84:	bf 2b       	or	r27, r31
     e86:	11 f4       	brne	.+4      	; 0xe8c <__fp_round+0x18>
     e88:	60 ff       	sbrs	r22, 0
     e8a:	04 c0       	rjmp	.+8      	; 0xe94 <__fp_round+0x20>
     e8c:	6f 5f       	subi	r22, 0xFF	; 255
     e8e:	7f 4f       	sbci	r23, 0xFF	; 255
     e90:	8f 4f       	sbci	r24, 0xFF	; 255
     e92:	9f 4f       	sbci	r25, 0xFF	; 255
     e94:	08 95       	ret

00000e96 <__fp_split3>:
     e96:	57 fd       	sbrc	r21, 7
     e98:	90 58       	subi	r25, 0x80	; 128
     e9a:	44 0f       	add	r20, r20
     e9c:	55 1f       	adc	r21, r21
     e9e:	59 f0       	breq	.+22     	; 0xeb6 <__fp_splitA+0x10>
     ea0:	5f 3f       	cpi	r21, 0xFF	; 255
     ea2:	71 f0       	breq	.+28     	; 0xec0 <__fp_splitA+0x1a>
     ea4:	47 95       	ror	r20

00000ea6 <__fp_splitA>:
     ea6:	88 0f       	add	r24, r24
     ea8:	97 fb       	bst	r25, 7
     eaa:	99 1f       	adc	r25, r25
     eac:	61 f0       	breq	.+24     	; 0xec6 <__fp_splitA+0x20>
     eae:	9f 3f       	cpi	r25, 0xFF	; 255
     eb0:	79 f0       	breq	.+30     	; 0xed0 <__fp_splitA+0x2a>
     eb2:	87 95       	ror	r24
     eb4:	08 95       	ret
     eb6:	12 16       	cp	r1, r18
     eb8:	13 06       	cpc	r1, r19
     eba:	14 06       	cpc	r1, r20
     ebc:	55 1f       	adc	r21, r21
     ebe:	f2 cf       	rjmp	.-28     	; 0xea4 <__fp_split3+0xe>
     ec0:	46 95       	lsr	r20
     ec2:	f1 df       	rcall	.-30     	; 0xea6 <__fp_splitA>
     ec4:	08 c0       	rjmp	.+16     	; 0xed6 <__fp_splitA+0x30>
     ec6:	16 16       	cp	r1, r22
     ec8:	17 06       	cpc	r1, r23
     eca:	18 06       	cpc	r1, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	f1 cf       	rjmp	.-30     	; 0xeb2 <__fp_splitA+0xc>
     ed0:	86 95       	lsr	r24
     ed2:	71 05       	cpc	r23, r1
     ed4:	61 05       	cpc	r22, r1
     ed6:	08 94       	sec
     ed8:	08 95       	ret

00000eda <__fp_zero>:
     eda:	e8 94       	clt

00000edc <__fp_szero>:
     edc:	bb 27       	eor	r27, r27
     ede:	66 27       	eor	r22, r22
     ee0:	77 27       	eor	r23, r23
     ee2:	cb 01       	movw	r24, r22
     ee4:	97 f9       	bld	r25, 7
     ee6:	08 95       	ret

00000ee8 <__mulsf3>:
     ee8:	0b d0       	rcall	.+22     	; 0xf00 <__mulsf3x>
     eea:	c4 cf       	rjmp	.-120    	; 0xe74 <__fp_round>
     eec:	b5 df       	rcall	.-150    	; 0xe58 <__fp_pscA>
     eee:	28 f0       	brcs	.+10     	; 0xefa <__mulsf3+0x12>
     ef0:	ba df       	rcall	.-140    	; 0xe66 <__fp_pscB>
     ef2:	18 f0       	brcs	.+6      	; 0xefa <__mulsf3+0x12>
     ef4:	95 23       	and	r25, r21
     ef6:	09 f0       	breq	.+2      	; 0xefa <__mulsf3+0x12>
     ef8:	a6 cf       	rjmp	.-180    	; 0xe46 <__fp_inf>
     efa:	ab cf       	rjmp	.-170    	; 0xe52 <__fp_nan>
     efc:	11 24       	eor	r1, r1
     efe:	ee cf       	rjmp	.-36     	; 0xedc <__fp_szero>

00000f00 <__mulsf3x>:
     f00:	ca df       	rcall	.-108    	; 0xe96 <__fp_split3>
     f02:	a0 f3       	brcs	.-24     	; 0xeec <__mulsf3+0x4>

00000f04 <__mulsf3_pse>:
     f04:	95 9f       	mul	r25, r21
     f06:	d1 f3       	breq	.-12     	; 0xefc <__mulsf3+0x14>
     f08:	95 0f       	add	r25, r21
     f0a:	50 e0       	ldi	r21, 0x00	; 0
     f0c:	55 1f       	adc	r21, r21
     f0e:	62 9f       	mul	r22, r18
     f10:	f0 01       	movw	r30, r0
     f12:	72 9f       	mul	r23, r18
     f14:	bb 27       	eor	r27, r27
     f16:	f0 0d       	add	r31, r0
     f18:	b1 1d       	adc	r27, r1
     f1a:	63 9f       	mul	r22, r19
     f1c:	aa 27       	eor	r26, r26
     f1e:	f0 0d       	add	r31, r0
     f20:	b1 1d       	adc	r27, r1
     f22:	aa 1f       	adc	r26, r26
     f24:	64 9f       	mul	r22, r20
     f26:	66 27       	eor	r22, r22
     f28:	b0 0d       	add	r27, r0
     f2a:	a1 1d       	adc	r26, r1
     f2c:	66 1f       	adc	r22, r22
     f2e:	82 9f       	mul	r24, r18
     f30:	22 27       	eor	r18, r18
     f32:	b0 0d       	add	r27, r0
     f34:	a1 1d       	adc	r26, r1
     f36:	62 1f       	adc	r22, r18
     f38:	73 9f       	mul	r23, r19
     f3a:	b0 0d       	add	r27, r0
     f3c:	a1 1d       	adc	r26, r1
     f3e:	62 1f       	adc	r22, r18
     f40:	83 9f       	mul	r24, r19
     f42:	a0 0d       	add	r26, r0
     f44:	61 1d       	adc	r22, r1
     f46:	22 1f       	adc	r18, r18
     f48:	74 9f       	mul	r23, r20
     f4a:	33 27       	eor	r19, r19
     f4c:	a0 0d       	add	r26, r0
     f4e:	61 1d       	adc	r22, r1
     f50:	23 1f       	adc	r18, r19
     f52:	84 9f       	mul	r24, r20
     f54:	60 0d       	add	r22, r0
     f56:	21 1d       	adc	r18, r1
     f58:	82 2f       	mov	r24, r18
     f5a:	76 2f       	mov	r23, r22
     f5c:	6a 2f       	mov	r22, r26
     f5e:	11 24       	eor	r1, r1
     f60:	9f 57       	subi	r25, 0x7F	; 127
     f62:	50 40       	sbci	r21, 0x00	; 0
     f64:	8a f0       	brmi	.+34     	; 0xf88 <__mulsf3_pse+0x84>
     f66:	e1 f0       	breq	.+56     	; 0xfa0 <__mulsf3_pse+0x9c>
     f68:	88 23       	and	r24, r24
     f6a:	4a f0       	brmi	.+18     	; 0xf7e <__mulsf3_pse+0x7a>
     f6c:	ee 0f       	add	r30, r30
     f6e:	ff 1f       	adc	r31, r31
     f70:	bb 1f       	adc	r27, r27
     f72:	66 1f       	adc	r22, r22
     f74:	77 1f       	adc	r23, r23
     f76:	88 1f       	adc	r24, r24
     f78:	91 50       	subi	r25, 0x01	; 1
     f7a:	50 40       	sbci	r21, 0x00	; 0
     f7c:	a9 f7       	brne	.-22     	; 0xf68 <__mulsf3_pse+0x64>
     f7e:	9e 3f       	cpi	r25, 0xFE	; 254
     f80:	51 05       	cpc	r21, r1
     f82:	70 f0       	brcs	.+28     	; 0xfa0 <__mulsf3_pse+0x9c>
     f84:	60 cf       	rjmp	.-320    	; 0xe46 <__fp_inf>
     f86:	aa cf       	rjmp	.-172    	; 0xedc <__fp_szero>
     f88:	5f 3f       	cpi	r21, 0xFF	; 255
     f8a:	ec f3       	brlt	.-6      	; 0xf86 <__mulsf3_pse+0x82>
     f8c:	98 3e       	cpi	r25, 0xE8	; 232
     f8e:	dc f3       	brlt	.-10     	; 0xf86 <__mulsf3_pse+0x82>
     f90:	86 95       	lsr	r24
     f92:	77 95       	ror	r23
     f94:	67 95       	ror	r22
     f96:	b7 95       	ror	r27
     f98:	f7 95       	ror	r31
     f9a:	e7 95       	ror	r30
     f9c:	9f 5f       	subi	r25, 0xFF	; 255
     f9e:	c1 f7       	brne	.-16     	; 0xf90 <__mulsf3_pse+0x8c>
     fa0:	fe 2b       	or	r31, r30
     fa2:	88 0f       	add	r24, r24
     fa4:	91 1d       	adc	r25, r1
     fa6:	96 95       	lsr	r25
     fa8:	87 95       	ror	r24
     faa:	97 f9       	bld	r25, 7
     fac:	08 95       	ret

00000fae <__prologue_saves__>:
     fae:	2f 92       	push	r2
     fb0:	3f 92       	push	r3
     fb2:	4f 92       	push	r4
     fb4:	5f 92       	push	r5
     fb6:	6f 92       	push	r6
     fb8:	7f 92       	push	r7
     fba:	8f 92       	push	r8
     fbc:	9f 92       	push	r9
     fbe:	af 92       	push	r10
     fc0:	bf 92       	push	r11
     fc2:	cf 92       	push	r12
     fc4:	df 92       	push	r13
     fc6:	ef 92       	push	r14
     fc8:	ff 92       	push	r15
     fca:	0f 93       	push	r16
     fcc:	1f 93       	push	r17
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	cd b7       	in	r28, 0x3d	; 61
     fd4:	de b7       	in	r29, 0x3e	; 62
     fd6:	ca 1b       	sub	r28, r26
     fd8:	db 0b       	sbc	r29, r27
     fda:	0f b6       	in	r0, 0x3f	; 63
     fdc:	f8 94       	cli
     fde:	de bf       	out	0x3e, r29	; 62
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	cd bf       	out	0x3d, r28	; 61
     fe4:	09 94       	ijmp

00000fe6 <__epilogue_restores__>:
     fe6:	2a 88       	ldd	r2, Y+18	; 0x12
     fe8:	39 88       	ldd	r3, Y+17	; 0x11
     fea:	48 88       	ldd	r4, Y+16	; 0x10
     fec:	5f 84       	ldd	r5, Y+15	; 0x0f
     fee:	6e 84       	ldd	r6, Y+14	; 0x0e
     ff0:	7d 84       	ldd	r7, Y+13	; 0x0d
     ff2:	8c 84       	ldd	r8, Y+12	; 0x0c
     ff4:	9b 84       	ldd	r9, Y+11	; 0x0b
     ff6:	aa 84       	ldd	r10, Y+10	; 0x0a
     ff8:	b9 84       	ldd	r11, Y+9	; 0x09
     ffa:	c8 84       	ldd	r12, Y+8	; 0x08
     ffc:	df 80       	ldd	r13, Y+7	; 0x07
     ffe:	ee 80       	ldd	r14, Y+6	; 0x06
    1000:	fd 80       	ldd	r15, Y+5	; 0x05
    1002:	0c 81       	ldd	r16, Y+4	; 0x04
    1004:	1b 81       	ldd	r17, Y+3	; 0x03
    1006:	aa 81       	ldd	r26, Y+2	; 0x02
    1008:	b9 81       	ldd	r27, Y+1	; 0x01
    100a:	ce 0f       	add	r28, r30
    100c:	d1 1d       	adc	r29, r1
    100e:	0f b6       	in	r0, 0x3f	; 63
    1010:	f8 94       	cli
    1012:	de bf       	out	0x3e, r29	; 62
    1014:	0f be       	out	0x3f, r0	; 63
    1016:	cd bf       	out	0x3d, r28	; 61
    1018:	ed 01       	movw	r28, r26
    101a:	08 95       	ret

0000101c <__ftoa_engine>:
    101c:	28 30       	cpi	r18, 0x08	; 8
    101e:	08 f0       	brcs	.+2      	; 0x1022 <__ftoa_engine+0x6>
    1020:	27 e0       	ldi	r18, 0x07	; 7
    1022:	33 27       	eor	r19, r19
    1024:	da 01       	movw	r26, r20
    1026:	99 0f       	add	r25, r25
    1028:	31 1d       	adc	r19, r1
    102a:	87 fd       	sbrc	r24, 7
    102c:	91 60       	ori	r25, 0x01	; 1
    102e:	00 96       	adiw	r24, 0x00	; 0
    1030:	61 05       	cpc	r22, r1
    1032:	71 05       	cpc	r23, r1
    1034:	39 f4       	brne	.+14     	; 0x1044 <__ftoa_engine+0x28>
    1036:	32 60       	ori	r19, 0x02	; 2
    1038:	2e 5f       	subi	r18, 0xFE	; 254
    103a:	3d 93       	st	X+, r19
    103c:	30 e3       	ldi	r19, 0x30	; 48
    103e:	2a 95       	dec	r18
    1040:	e1 f7       	brne	.-8      	; 0x103a <__ftoa_engine+0x1e>
    1042:	08 95       	ret
    1044:	9f 3f       	cpi	r25, 0xFF	; 255
    1046:	30 f0       	brcs	.+12     	; 0x1054 <__ftoa_engine+0x38>
    1048:	80 38       	cpi	r24, 0x80	; 128
    104a:	71 05       	cpc	r23, r1
    104c:	61 05       	cpc	r22, r1
    104e:	09 f0       	breq	.+2      	; 0x1052 <__ftoa_engine+0x36>
    1050:	3c 5f       	subi	r19, 0xFC	; 252
    1052:	3c 5f       	subi	r19, 0xFC	; 252
    1054:	3d 93       	st	X+, r19
    1056:	91 30       	cpi	r25, 0x01	; 1
    1058:	08 f0       	brcs	.+2      	; 0x105c <__ftoa_engine+0x40>
    105a:	80 68       	ori	r24, 0x80	; 128
    105c:	91 1d       	adc	r25, r1
    105e:	df 93       	push	r29
    1060:	cf 93       	push	r28
    1062:	1f 93       	push	r17
    1064:	0f 93       	push	r16
    1066:	ff 92       	push	r15
    1068:	ef 92       	push	r14
    106a:	19 2f       	mov	r17, r25
    106c:	98 7f       	andi	r25, 0xF8	; 248
    106e:	96 95       	lsr	r25
    1070:	e9 2f       	mov	r30, r25
    1072:	96 95       	lsr	r25
    1074:	96 95       	lsr	r25
    1076:	e9 0f       	add	r30, r25
    1078:	ff 27       	eor	r31, r31
    107a:	e6 53       	subi	r30, 0x36	; 54
    107c:	ff 4f       	sbci	r31, 0xFF	; 255
    107e:	99 27       	eor	r25, r25
    1080:	33 27       	eor	r19, r19
    1082:	ee 24       	eor	r14, r14
    1084:	ff 24       	eor	r15, r15
    1086:	a7 01       	movw	r20, r14
    1088:	e7 01       	movw	r28, r14
    108a:	05 90       	lpm	r0, Z+
    108c:	08 94       	sec
    108e:	07 94       	ror	r0
    1090:	28 f4       	brcc	.+10     	; 0x109c <__ftoa_engine+0x80>
    1092:	36 0f       	add	r19, r22
    1094:	e7 1e       	adc	r14, r23
    1096:	f8 1e       	adc	r15, r24
    1098:	49 1f       	adc	r20, r25
    109a:	51 1d       	adc	r21, r1
    109c:	66 0f       	add	r22, r22
    109e:	77 1f       	adc	r23, r23
    10a0:	88 1f       	adc	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	06 94       	lsr	r0
    10a6:	a1 f7       	brne	.-24     	; 0x1090 <__ftoa_engine+0x74>
    10a8:	05 90       	lpm	r0, Z+
    10aa:	07 94       	ror	r0
    10ac:	28 f4       	brcc	.+10     	; 0x10b8 <__ftoa_engine+0x9c>
    10ae:	e7 0e       	add	r14, r23
    10b0:	f8 1e       	adc	r15, r24
    10b2:	49 1f       	adc	r20, r25
    10b4:	56 1f       	adc	r21, r22
    10b6:	c1 1d       	adc	r28, r1
    10b8:	77 0f       	add	r23, r23
    10ba:	88 1f       	adc	r24, r24
    10bc:	99 1f       	adc	r25, r25
    10be:	66 1f       	adc	r22, r22
    10c0:	06 94       	lsr	r0
    10c2:	a1 f7       	brne	.-24     	; 0x10ac <__ftoa_engine+0x90>
    10c4:	05 90       	lpm	r0, Z+
    10c6:	07 94       	ror	r0
    10c8:	28 f4       	brcc	.+10     	; 0x10d4 <__ftoa_engine+0xb8>
    10ca:	f8 0e       	add	r15, r24
    10cc:	49 1f       	adc	r20, r25
    10ce:	56 1f       	adc	r21, r22
    10d0:	c7 1f       	adc	r28, r23
    10d2:	d1 1d       	adc	r29, r1
    10d4:	88 0f       	add	r24, r24
    10d6:	99 1f       	adc	r25, r25
    10d8:	66 1f       	adc	r22, r22
    10da:	77 1f       	adc	r23, r23
    10dc:	06 94       	lsr	r0
    10de:	a1 f7       	brne	.-24     	; 0x10c8 <__ftoa_engine+0xac>
    10e0:	05 90       	lpm	r0, Z+
    10e2:	07 94       	ror	r0
    10e4:	20 f4       	brcc	.+8      	; 0x10ee <__ftoa_engine+0xd2>
    10e6:	49 0f       	add	r20, r25
    10e8:	56 1f       	adc	r21, r22
    10ea:	c7 1f       	adc	r28, r23
    10ec:	d8 1f       	adc	r29, r24
    10ee:	99 0f       	add	r25, r25
    10f0:	66 1f       	adc	r22, r22
    10f2:	77 1f       	adc	r23, r23
    10f4:	88 1f       	adc	r24, r24
    10f6:	06 94       	lsr	r0
    10f8:	a9 f7       	brne	.-22     	; 0x10e4 <__ftoa_engine+0xc8>
    10fa:	84 91       	lpm	r24, Z
    10fc:	10 95       	com	r17
    10fe:	17 70       	andi	r17, 0x07	; 7
    1100:	41 f0       	breq	.+16     	; 0x1112 <__ftoa_engine+0xf6>
    1102:	d6 95       	lsr	r29
    1104:	c7 95       	ror	r28
    1106:	57 95       	ror	r21
    1108:	47 95       	ror	r20
    110a:	f7 94       	ror	r15
    110c:	e7 94       	ror	r14
    110e:	1a 95       	dec	r17
    1110:	c1 f7       	brne	.-16     	; 0x1102 <__ftoa_engine+0xe6>
    1112:	e0 e7       	ldi	r30, 0x70	; 112
    1114:	f0 e0       	ldi	r31, 0x00	; 0
    1116:	68 94       	set
    1118:	15 90       	lpm	r1, Z+
    111a:	15 91       	lpm	r17, Z+
    111c:	35 91       	lpm	r19, Z+
    111e:	65 91       	lpm	r22, Z+
    1120:	95 91       	lpm	r25, Z+
    1122:	05 90       	lpm	r0, Z+
    1124:	7f e2       	ldi	r23, 0x2F	; 47
    1126:	73 95       	inc	r23
    1128:	e1 18       	sub	r14, r1
    112a:	f1 0a       	sbc	r15, r17
    112c:	43 0b       	sbc	r20, r19
    112e:	56 0b       	sbc	r21, r22
    1130:	c9 0b       	sbc	r28, r25
    1132:	d0 09       	sbc	r29, r0
    1134:	c0 f7       	brcc	.-16     	; 0x1126 <__ftoa_engine+0x10a>
    1136:	e1 0c       	add	r14, r1
    1138:	f1 1e       	adc	r15, r17
    113a:	43 1f       	adc	r20, r19
    113c:	56 1f       	adc	r21, r22
    113e:	c9 1f       	adc	r28, r25
    1140:	d0 1d       	adc	r29, r0
    1142:	7e f4       	brtc	.+30     	; 0x1162 <__ftoa_engine+0x146>
    1144:	70 33       	cpi	r23, 0x30	; 48
    1146:	11 f4       	brne	.+4      	; 0x114c <__ftoa_engine+0x130>
    1148:	8a 95       	dec	r24
    114a:	e6 cf       	rjmp	.-52     	; 0x1118 <__ftoa_engine+0xfc>
    114c:	e8 94       	clt
    114e:	01 50       	subi	r16, 0x01	; 1
    1150:	30 f0       	brcs	.+12     	; 0x115e <__ftoa_engine+0x142>
    1152:	08 0f       	add	r16, r24
    1154:	0a f4       	brpl	.+2      	; 0x1158 <__ftoa_engine+0x13c>
    1156:	00 27       	eor	r16, r16
    1158:	02 17       	cp	r16, r18
    115a:	08 f4       	brcc	.+2      	; 0x115e <__ftoa_engine+0x142>
    115c:	20 2f       	mov	r18, r16
    115e:	23 95       	inc	r18
    1160:	02 2f       	mov	r16, r18
    1162:	7a 33       	cpi	r23, 0x3A	; 58
    1164:	28 f0       	brcs	.+10     	; 0x1170 <__ftoa_engine+0x154>
    1166:	79 e3       	ldi	r23, 0x39	; 57
    1168:	7d 93       	st	X+, r23
    116a:	2a 95       	dec	r18
    116c:	e9 f7       	brne	.-6      	; 0x1168 <__ftoa_engine+0x14c>
    116e:	10 c0       	rjmp	.+32     	; 0x1190 <__ftoa_engine+0x174>
    1170:	7d 93       	st	X+, r23
    1172:	2a 95       	dec	r18
    1174:	89 f6       	brne	.-94     	; 0x1118 <__ftoa_engine+0xfc>
    1176:	06 94       	lsr	r0
    1178:	97 95       	ror	r25
    117a:	67 95       	ror	r22
    117c:	37 95       	ror	r19
    117e:	17 95       	ror	r17
    1180:	17 94       	ror	r1
    1182:	e1 18       	sub	r14, r1
    1184:	f1 0a       	sbc	r15, r17
    1186:	43 0b       	sbc	r20, r19
    1188:	56 0b       	sbc	r21, r22
    118a:	c9 0b       	sbc	r28, r25
    118c:	d0 09       	sbc	r29, r0
    118e:	98 f0       	brcs	.+38     	; 0x11b6 <__ftoa_engine+0x19a>
    1190:	23 95       	inc	r18
    1192:	7e 91       	ld	r23, -X
    1194:	73 95       	inc	r23
    1196:	7a 33       	cpi	r23, 0x3A	; 58
    1198:	08 f0       	brcs	.+2      	; 0x119c <__ftoa_engine+0x180>
    119a:	70 e3       	ldi	r23, 0x30	; 48
    119c:	7c 93       	st	X, r23
    119e:	20 13       	cpse	r18, r16
    11a0:	b8 f7       	brcc	.-18     	; 0x1190 <__ftoa_engine+0x174>
    11a2:	7e 91       	ld	r23, -X
    11a4:	70 61       	ori	r23, 0x10	; 16
    11a6:	7d 93       	st	X+, r23
    11a8:	30 f0       	brcs	.+12     	; 0x11b6 <__ftoa_engine+0x19a>
    11aa:	83 95       	inc	r24
    11ac:	71 e3       	ldi	r23, 0x31	; 49
    11ae:	7d 93       	st	X+, r23
    11b0:	70 e3       	ldi	r23, 0x30	; 48
    11b2:	2a 95       	dec	r18
    11b4:	e1 f7       	brne	.-8      	; 0x11ae <__ftoa_engine+0x192>
    11b6:	11 24       	eor	r1, r1
    11b8:	ef 90       	pop	r14
    11ba:	ff 90       	pop	r15
    11bc:	0f 91       	pop	r16
    11be:	1f 91       	pop	r17
    11c0:	cf 91       	pop	r28
    11c2:	df 91       	pop	r29
    11c4:	99 27       	eor	r25, r25
    11c6:	87 fd       	sbrc	r24, 7
    11c8:	90 95       	com	r25
    11ca:	08 95       	ret

000011cc <strnlen_P>:
    11cc:	fc 01       	movw	r30, r24
    11ce:	05 90       	lpm	r0, Z+
    11d0:	61 50       	subi	r22, 0x01	; 1
    11d2:	70 40       	sbci	r23, 0x00	; 0
    11d4:	01 10       	cpse	r0, r1
    11d6:	d8 f7       	brcc	.-10     	; 0x11ce <strnlen_P+0x2>
    11d8:	80 95       	com	r24
    11da:	90 95       	com	r25
    11dc:	8e 0f       	add	r24, r30
    11de:	9f 1f       	adc	r25, r31
    11e0:	08 95       	ret

000011e2 <strnlen>:
    11e2:	fc 01       	movw	r30, r24
    11e4:	61 50       	subi	r22, 0x01	; 1
    11e6:	70 40       	sbci	r23, 0x00	; 0
    11e8:	01 90       	ld	r0, Z+
    11ea:	01 10       	cpse	r0, r1
    11ec:	d8 f7       	brcc	.-10     	; 0x11e4 <strnlen+0x2>
    11ee:	80 95       	com	r24
    11f0:	90 95       	com	r25
    11f2:	8e 0f       	add	r24, r30
    11f4:	9f 1f       	adc	r25, r31
    11f6:	08 95       	ret

000011f8 <fputc>:
    11f8:	0f 93       	push	r16
    11fa:	1f 93       	push	r17
    11fc:	cf 93       	push	r28
    11fe:	df 93       	push	r29
    1200:	fb 01       	movw	r30, r22
    1202:	23 81       	ldd	r18, Z+3	; 0x03
    1204:	21 fd       	sbrc	r18, 1
    1206:	03 c0       	rjmp	.+6      	; 0x120e <fputc+0x16>
    1208:	8f ef       	ldi	r24, 0xFF	; 255
    120a:	9f ef       	ldi	r25, 0xFF	; 255
    120c:	28 c0       	rjmp	.+80     	; 0x125e <fputc+0x66>
    120e:	22 ff       	sbrs	r18, 2
    1210:	16 c0       	rjmp	.+44     	; 0x123e <fputc+0x46>
    1212:	46 81       	ldd	r20, Z+6	; 0x06
    1214:	57 81       	ldd	r21, Z+7	; 0x07
    1216:	24 81       	ldd	r18, Z+4	; 0x04
    1218:	35 81       	ldd	r19, Z+5	; 0x05
    121a:	42 17       	cp	r20, r18
    121c:	53 07       	cpc	r21, r19
    121e:	44 f4       	brge	.+16     	; 0x1230 <fputc+0x38>
    1220:	a0 81       	ld	r26, Z
    1222:	b1 81       	ldd	r27, Z+1	; 0x01
    1224:	9d 01       	movw	r18, r26
    1226:	2f 5f       	subi	r18, 0xFF	; 255
    1228:	3f 4f       	sbci	r19, 0xFF	; 255
    122a:	31 83       	std	Z+1, r19	; 0x01
    122c:	20 83       	st	Z, r18
    122e:	8c 93       	st	X, r24
    1230:	26 81       	ldd	r18, Z+6	; 0x06
    1232:	37 81       	ldd	r19, Z+7	; 0x07
    1234:	2f 5f       	subi	r18, 0xFF	; 255
    1236:	3f 4f       	sbci	r19, 0xFF	; 255
    1238:	37 83       	std	Z+7, r19	; 0x07
    123a:	26 83       	std	Z+6, r18	; 0x06
    123c:	10 c0       	rjmp	.+32     	; 0x125e <fputc+0x66>
    123e:	eb 01       	movw	r28, r22
    1240:	09 2f       	mov	r16, r25
    1242:	18 2f       	mov	r17, r24
    1244:	00 84       	ldd	r0, Z+8	; 0x08
    1246:	f1 85       	ldd	r31, Z+9	; 0x09
    1248:	e0 2d       	mov	r30, r0
    124a:	09 95       	icall
    124c:	89 2b       	or	r24, r25
    124e:	e1 f6       	brne	.-72     	; 0x1208 <fputc+0x10>
    1250:	8e 81       	ldd	r24, Y+6	; 0x06
    1252:	9f 81       	ldd	r25, Y+7	; 0x07
    1254:	01 96       	adiw	r24, 0x01	; 1
    1256:	9f 83       	std	Y+7, r25	; 0x07
    1258:	8e 83       	std	Y+6, r24	; 0x06
    125a:	81 2f       	mov	r24, r17
    125c:	90 2f       	mov	r25, r16
    125e:	df 91       	pop	r29
    1260:	cf 91       	pop	r28
    1262:	1f 91       	pop	r17
    1264:	0f 91       	pop	r16
    1266:	08 95       	ret

00001268 <__ultoa_invert>:
    1268:	fa 01       	movw	r30, r20
    126a:	aa 27       	eor	r26, r26
    126c:	28 30       	cpi	r18, 0x08	; 8
    126e:	51 f1       	breq	.+84     	; 0x12c4 <__ultoa_invert+0x5c>
    1270:	20 31       	cpi	r18, 0x10	; 16
    1272:	81 f1       	breq	.+96     	; 0x12d4 <__ultoa_invert+0x6c>
    1274:	e8 94       	clt
    1276:	6f 93       	push	r22
    1278:	6e 7f       	andi	r22, 0xFE	; 254
    127a:	6e 5f       	subi	r22, 0xFE	; 254
    127c:	7f 4f       	sbci	r23, 0xFF	; 255
    127e:	8f 4f       	sbci	r24, 0xFF	; 255
    1280:	9f 4f       	sbci	r25, 0xFF	; 255
    1282:	af 4f       	sbci	r26, 0xFF	; 255
    1284:	b1 e0       	ldi	r27, 0x01	; 1
    1286:	3e d0       	rcall	.+124    	; 0x1304 <__ultoa_invert+0x9c>
    1288:	b4 e0       	ldi	r27, 0x04	; 4
    128a:	3c d0       	rcall	.+120    	; 0x1304 <__ultoa_invert+0x9c>
    128c:	67 0f       	add	r22, r23
    128e:	78 1f       	adc	r23, r24
    1290:	89 1f       	adc	r24, r25
    1292:	9a 1f       	adc	r25, r26
    1294:	a1 1d       	adc	r26, r1
    1296:	68 0f       	add	r22, r24
    1298:	79 1f       	adc	r23, r25
    129a:	8a 1f       	adc	r24, r26
    129c:	91 1d       	adc	r25, r1
    129e:	a1 1d       	adc	r26, r1
    12a0:	6a 0f       	add	r22, r26
    12a2:	71 1d       	adc	r23, r1
    12a4:	81 1d       	adc	r24, r1
    12a6:	91 1d       	adc	r25, r1
    12a8:	a1 1d       	adc	r26, r1
    12aa:	20 d0       	rcall	.+64     	; 0x12ec <__ultoa_invert+0x84>
    12ac:	09 f4       	brne	.+2      	; 0x12b0 <__ultoa_invert+0x48>
    12ae:	68 94       	set
    12b0:	3f 91       	pop	r19
    12b2:	2a e0       	ldi	r18, 0x0A	; 10
    12b4:	26 9f       	mul	r18, r22
    12b6:	11 24       	eor	r1, r1
    12b8:	30 19       	sub	r19, r0
    12ba:	30 5d       	subi	r19, 0xD0	; 208
    12bc:	31 93       	st	Z+, r19
    12be:	de f6       	brtc	.-74     	; 0x1276 <__ultoa_invert+0xe>
    12c0:	cf 01       	movw	r24, r30
    12c2:	08 95       	ret
    12c4:	46 2f       	mov	r20, r22
    12c6:	47 70       	andi	r20, 0x07	; 7
    12c8:	40 5d       	subi	r20, 0xD0	; 208
    12ca:	41 93       	st	Z+, r20
    12cc:	b3 e0       	ldi	r27, 0x03	; 3
    12ce:	0f d0       	rcall	.+30     	; 0x12ee <__ultoa_invert+0x86>
    12d0:	c9 f7       	brne	.-14     	; 0x12c4 <__ultoa_invert+0x5c>
    12d2:	f6 cf       	rjmp	.-20     	; 0x12c0 <__ultoa_invert+0x58>
    12d4:	46 2f       	mov	r20, r22
    12d6:	4f 70       	andi	r20, 0x0F	; 15
    12d8:	40 5d       	subi	r20, 0xD0	; 208
    12da:	4a 33       	cpi	r20, 0x3A	; 58
    12dc:	18 f0       	brcs	.+6      	; 0x12e4 <__ultoa_invert+0x7c>
    12de:	49 5d       	subi	r20, 0xD9	; 217
    12e0:	31 fd       	sbrc	r19, 1
    12e2:	40 52       	subi	r20, 0x20	; 32
    12e4:	41 93       	st	Z+, r20
    12e6:	02 d0       	rcall	.+4      	; 0x12ec <__ultoa_invert+0x84>
    12e8:	a9 f7       	brne	.-22     	; 0x12d4 <__ultoa_invert+0x6c>
    12ea:	ea cf       	rjmp	.-44     	; 0x12c0 <__ultoa_invert+0x58>
    12ec:	b4 e0       	ldi	r27, 0x04	; 4
    12ee:	a6 95       	lsr	r26
    12f0:	97 95       	ror	r25
    12f2:	87 95       	ror	r24
    12f4:	77 95       	ror	r23
    12f6:	67 95       	ror	r22
    12f8:	ba 95       	dec	r27
    12fa:	c9 f7       	brne	.-14     	; 0x12ee <__ultoa_invert+0x86>
    12fc:	00 97       	sbiw	r24, 0x00	; 0
    12fe:	61 05       	cpc	r22, r1
    1300:	71 05       	cpc	r23, r1
    1302:	08 95       	ret
    1304:	9b 01       	movw	r18, r22
    1306:	ac 01       	movw	r20, r24
    1308:	0a 2e       	mov	r0, r26
    130a:	06 94       	lsr	r0
    130c:	57 95       	ror	r21
    130e:	47 95       	ror	r20
    1310:	37 95       	ror	r19
    1312:	27 95       	ror	r18
    1314:	ba 95       	dec	r27
    1316:	c9 f7       	brne	.-14     	; 0x130a <__ultoa_invert+0xa2>
    1318:	62 0f       	add	r22, r18
    131a:	73 1f       	adc	r23, r19
    131c:	84 1f       	adc	r24, r20
    131e:	95 1f       	adc	r25, r21
    1320:	a0 1d       	adc	r26, r0
    1322:	08 95       	ret

00001324 <_exit>:
    1324:	f8 94       	cli

00001326 <__stop_program>:
    1326:	ff cf       	rjmp	.-2      	; 0x1326 <__stop_program>
