   1               		.file	"LSM303D_ACC_MAG.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 110               	.global	init_acc
 112               	init_acc:
   1:LSM303D_ACC_MAG.c **** /* 
   2:LSM303D_ACC_MAG.c ****  * File:   LSM303D_ACC_MAGNETO.c
   3:LSM303D_ACC_MAG.c ****  * Author: Christian Bodelsson<bodelsson@gmail.com>
   4:LSM303D_ACC_MAG.c ****  *
   5:LSM303D_ACC_MAG.c ****  * Created on February 17, 2015, 8:46 AM
   6:LSM303D_ACC_MAG.c ****  */
   7:LSM303D_ACC_MAG.c **** //TODO Write documentation and implement
   8:LSM303D_ACC_MAG.c **** #include <avr/io.h>
   9:LSM303D_ACC_MAG.c **** #include "ALTIMU_10.h"
  10:LSM303D_ACC_MAG.c **** #include "LSM303D_ACC_MAG.h"
  11:LSM303D_ACC_MAG.c **** #include "twi_master.h"
  12:LSM303D_ACC_MAG.c **** #include <math.h>
  13:LSM303D_ACC_MAG.c **** 
  14:LSM303D_ACC_MAG.c **** /*************************************************************************
  15:LSM303D_ACC_MAG.c ****  * Initialize acc
  16:LSM303D_ACC_MAG.c ****  * (+/- 2 g full scale)
  17:LSM303D_ACC_MAG.c ****  * (50 Hz ODR); AZEN = AYEN = AXEN = 1 (all axes enabled)
  18:LSM303D_ACC_MAG.c ****  
  19:LSM303D_ACC_MAG.c ****  *************************************************************************/
  20:LSM303D_ACC_MAG.c **** void init_acc(void) {
 114               	.LM0:
 115               	.LFBB1:
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 0 */
 119               	.L__stack_usage = 0
  21:LSM303D_ACC_MAG.c ****     write_to_reg(ACC_MAG_SLAVE_ADDRESS, ACC_MAG_CTRL2, 0x00);
 121               	.LM1:
 122 0000 40E0      		ldi r20,0
 123 0002 61E2      		ldi r22,lo8(33)
 124 0004 8DE1      		ldi r24,lo8(29)
 125 0006 0E94 0000 		call write_to_reg
  22:LSM303D_ACC_MAG.c ****     write_to_reg(ACC_MAG_SLAVE_ADDRESS, ACC_MAG_CTRL1, 0x57);
 127               	.LM2:
 128 000a 47E5      		ldi r20,lo8(87)
 129 000c 60E2      		ldi r22,lo8(32)
 130 000e 8DE1      		ldi r24,lo8(29)
 131 0010 0C94 0000 		jmp write_to_reg
 133               	.Lscope1:
 135               	.global	init_mag
 137               	init_mag:
  23:LSM303D_ACC_MAG.c **** 
  24:LSM303D_ACC_MAG.c **** }/*init_acc*/
  25:LSM303D_ACC_MAG.c **** 
  26:LSM303D_ACC_MAG.c **** /*************************************************************************
  27:LSM303D_ACC_MAG.c ****  * Initialize mag
  28:LSM303D_ACC_MAG.c ****  * (high resolution mode); M_ODR = 001 (6.25 Hz ODR)
  29:LSM303D_ACC_MAG.c ****  * (+/- 4 gauss full scale)
  30:LSM303D_ACC_MAG.c ****  * (low power mode off); MD = 00 (continuous-conversion mode)
  31:LSM303D_ACC_MAG.c ****  
  32:LSM303D_ACC_MAG.c ****  *************************************************************************/
  33:LSM303D_ACC_MAG.c **** 
  34:LSM303D_ACC_MAG.c **** void init_mag(void) {
 139               	.LM3:
 140               	.LFBB2:
 141               	/* prologue: function */
 142               	/* frame size = 0 */
 143               	/* stack size = 0 */
 144               	.L__stack_usage = 0
  35:LSM303D_ACC_MAG.c ****     write_to_reg(ACC_MAG_SLAVE_ADDRESS, ACC_MAG_CTRL5, 0x64);
 146               	.LM4:
 147 0014 44E6      		ldi r20,lo8(100)
 148 0016 64E2      		ldi r22,lo8(36)
 149 0018 8DE1      		ldi r24,lo8(29)
 150 001a 0E94 0000 		call write_to_reg
  36:LSM303D_ACC_MAG.c ****     write_to_reg(ACC_MAG_SLAVE_ADDRESS, ACC_MAG_CTRL6, 0x20);
 152               	.LM5:
 153 001e 40E2      		ldi r20,lo8(32)
 154 0020 65E2      		ldi r22,lo8(37)
 155 0022 8DE1      		ldi r24,lo8(29)
 156 0024 0E94 0000 		call write_to_reg
  37:LSM303D_ACC_MAG.c ****     write_to_reg(ACC_MAG_SLAVE_ADDRESS, ACC_MAG_CTRL7, 0x00);
 158               	.LM6:
 159 0028 40E0      		ldi r20,0
 160 002a 66E2      		ldi r22,lo8(38)
 161 002c 8DE1      		ldi r24,lo8(29)
 162 002e 0C94 0000 		jmp write_to_reg
 164               	.Lscope2:
 167               	.global	read_acc_raw
 169               	read_acc_raw:
  38:LSM303D_ACC_MAG.c **** }/*init_mag*/
  39:LSM303D_ACC_MAG.c **** 
  40:LSM303D_ACC_MAG.c **** /*************************************************************************
  41:LSM303D_ACC_MAG.c ****  * read_acc_raw values
  42:LSM303D_ACC_MAG.c ****  
  43:LSM303D_ACC_MAG.c ****  *************************************************************************/
  44:LSM303D_ACC_MAG.c **** 
  45:LSM303D_ACC_MAG.c **** void read_acc_raw(struct acc_val_raw *_acc_raw_) {
 171               	.LM7:
 172               	.LFBB3:
 173 0032 DF92      		push r13
 174 0034 EF92      		push r14
 175 0036 FF92      		push r15
 176 0038 0F93      		push r16
 177 003a 1F93      		push r17
 178 003c CF93      		push r28
 179 003e DF93      		push r29
 180               	/* prologue: function */
 181               	/* frame size = 0 */
 182               	/* stack size = 7 */
 183               	.L__stack_usage = 7
 184 0040 8C01      		movw r16,r24
  46:LSM303D_ACC_MAG.c ****     if (i2c_start(ACC_MAG_SLAVE_ADDRESS << 1) == 0) {
 186               	.LM8:
 187 0042 8AE3      		ldi r24,lo8(58)
 188 0044 0E94 0000 		call i2c_start
 189 0048 8111      		cpse r24,__zero_reg__
 190 004a 00C0      		rjmp .L3
  47:LSM303D_ACC_MAG.c ****         i2c_write(ACC_MAG_OUT_X_L_A | (1 << 7)); //Auto increment registers by writing the MSB high
 192               	.LM9:
 193 004c 88EA      		ldi r24,lo8(-88)
 194 004e 0E94 0000 		call i2c_write
  48:LSM303D_ACC_MAG.c **** 
  49:LSM303D_ACC_MAG.c ****         if (i2c_rep_start(((uint8_t) ACC_MAG_SLAVE_ADDRESS << 1) | 1) == 0) {
 196               	.LM10:
 197 0052 8BE3      		ldi r24,lo8(59)
 198 0054 0E94 0000 		call i2c_rep_start
 199 0058 8111      		cpse r24,__zero_reg__
 200 005a 00C0      		rjmp .L3
 201               	.LBB2:
  50:LSM303D_ACC_MAG.c ****             uint8_t xlg = i2c_read(ACK);
 203               	.LM11:
 204 005c 0E94 0000 		call i2c_readAck
 205 0060 F82E      		mov r15,r24
  51:LSM303D_ACC_MAG.c ****             uint8_t xhg = i2c_read(ACK);
 207               	.LM12:
 208 0062 0E94 0000 		call i2c_readAck
 209 0066 D82E      		mov r13,r24
  52:LSM303D_ACC_MAG.c **** 
  53:LSM303D_ACC_MAG.c ****             uint8_t ylg = i2c_read(ACK);
 211               	.LM13:
 212 0068 0E94 0000 		call i2c_readAck
 213 006c D82F      		mov r29,r24
  54:LSM303D_ACC_MAG.c ****             uint8_t yhg = i2c_read(ACK);
 215               	.LM14:
 216 006e 0E94 0000 		call i2c_readAck
 217 0072 E82E      		mov r14,r24
  55:LSM303D_ACC_MAG.c **** 
  56:LSM303D_ACC_MAG.c ****             uint8_t zlg = i2c_read(ACK);
 219               	.LM15:
 220 0074 0E94 0000 		call i2c_readAck
 221 0078 C82F      		mov r28,r24
  57:LSM303D_ACC_MAG.c ****             uint8_t zhg = i2c_read(NAK);
 223               	.LM16:
 224 007a 0E94 0000 		call i2c_readNak
  58:LSM303D_ACC_MAG.c **** 
  59:LSM303D_ACC_MAG.c ****             _acc_raw_->x = (int16_t) (xhg << 8 | xlg);
 226               	.LM17:
 227 007e 2F2D      		mov r18,r15
 228 0080 30E0      		ldi r19,0
 229 0082 3D29      		or r19,r13
 230 0084 F801      		movw r30,r16
 231 0086 3183      		std Z+1,r19
 232 0088 2083      		st Z,r18
  60:LSM303D_ACC_MAG.c ****             _acc_raw_->y = (int16_t) (yhg << 8 | ylg);
 234               	.LM18:
 235 008a 2D2F      		mov r18,r29
 236 008c 30E0      		ldi r19,0
 237 008e 3E29      		or r19,r14
 238 0090 3383      		std Z+3,r19
 239 0092 2283      		std Z+2,r18
  61:LSM303D_ACC_MAG.c ****             _acc_raw_->z = (int16_t) (zhg << 8 | zlg);
 241               	.LM19:
 242 0094 2C2F      		mov r18,r28
 243 0096 30E0      		ldi r19,0
 244 0098 382B      		or r19,r24
 245 009a 3583      		std Z+5,r19
 246 009c 2483      		std Z+4,r18
 247               	.L3:
 248               	/* epilogue start */
 249               	.LBE2:
  62:LSM303D_ACC_MAG.c **** 
  63:LSM303D_ACC_MAG.c ****         }
  64:LSM303D_ACC_MAG.c ****     }
  65:LSM303D_ACC_MAG.c **** 
  66:LSM303D_ACC_MAG.c **** }/*read_acc_raw*/
 251               	.LM20:
 252 009e DF91      		pop r29
 253 00a0 CF91      		pop r28
 254 00a2 1F91      		pop r17
 255 00a4 0F91      		pop r16
 256 00a6 FF90      		pop r15
 257 00a8 EF90      		pop r14
 258 00aa DF90      		pop r13
 259 00ac 0895      		ret
 268               	.Lscope3:
 269               	.global	__floatsisf
 270               	.global	__addsf3
 271               	.global	__mulsf3
 272               	.global	__fixsfsi
 273               	.global	__subsf3
 277               	.global	read_acc_angel
 279               	read_acc_angel:
  67:LSM303D_ACC_MAG.c **** 
  68:LSM303D_ACC_MAG.c **** /*************************************************************************
  69:LSM303D_ACC_MAG.c ****  * read_acc_angles values
  70:LSM303D_ACC_MAG.c ****  * 
  71:LSM303D_ACC_MAG.c ****  
  72:LSM303D_ACC_MAG.c ****  *************************************************************************/
  73:LSM303D_ACC_MAG.c **** void read_acc_angel(struct acc_val_raw *_acc_raw_, struct acc_val_angle *_acc_angle) {
 281               	.LM21:
 282               	.LFBB4:
 283 00ae 8F92      		push r8
 284 00b0 9F92      		push r9
 285 00b2 AF92      		push r10
 286 00b4 BF92      		push r11
 287 00b6 CF92      		push r12
 288 00b8 DF92      		push r13
 289 00ba EF92      		push r14
 290 00bc FF92      		push r15
 291 00be 0F93      		push r16
 292 00c0 1F93      		push r17
 293 00c2 CF93      		push r28
 294 00c4 DF93      		push r29
 295               	/* prologue: function */
 296               	/* frame size = 0 */
 297               	/* stack size = 12 */
 298               	.L__stack_usage = 12
 299 00c6 8C01      		movw r16,r24
 300 00c8 EB01      		movw r28,r22
  74:LSM303D_ACC_MAG.c ****     _acc_angle->x = (float) (atan2(_acc_raw_->y, _acc_raw_->z) + M_PI) * RAD_TO_DEG;
 302               	.LM22:
 303 00ca FC01      		movw r30,r24
 304 00cc 6481      		ldd r22,Z+4
 305 00ce 7581      		ldd r23,Z+5
 306 00d0 8827      		clr r24
 307 00d2 77FD      		sbrc r23,7
 308 00d4 8095      		com r24
 309 00d6 982F      		mov r25,r24
 310 00d8 0E94 0000 		call __floatsisf
 311 00dc 6B01      		movw r12,r22
 312 00de 7C01      		movw r14,r24
 313 00e0 F801      		movw r30,r16
 314 00e2 6281      		ldd r22,Z+2
 315 00e4 7381      		ldd r23,Z+3
 316 00e6 8827      		clr r24
 317 00e8 77FD      		sbrc r23,7
 318 00ea 8095      		com r24
 319 00ec 982F      		mov r25,r24
 320 00ee 0E94 0000 		call __floatsisf
 321 00f2 A701      		movw r20,r14
 322 00f4 9601      		movw r18,r12
 323 00f6 0E94 0000 		call atan2
 324 00fa 4B01      		movw r8,r22
 325 00fc 5C01      		movw r10,r24
  75:LSM303D_ACC_MAG.c ****     _acc_angle->y = (float) (atan2(_acc_raw_->z, _acc_raw_->x) + M_PI) * RAD_TO_DEG;
 327               	.LM23:
 328 00fe F801      		movw r30,r16
 329 0100 6081      		ld r22,Z
 330 0102 7181      		ldd r23,Z+1
 331 0104 8827      		clr r24
 332 0106 77FD      		sbrc r23,7
 333 0108 8095      		com r24
 334 010a 982F      		mov r25,r24
 335 010c 0E94 0000 		call __floatsisf
 336 0110 9B01      		movw r18,r22
 337 0112 AC01      		movw r20,r24
 338 0114 C701      		movw r24,r14
 339 0116 B601      		movw r22,r12
 340 0118 0E94 0000 		call atan2
 341 011c 2BED      		ldi r18,lo8(-37)
 342 011e 3FE0      		ldi r19,lo8(15)
 343 0120 49E4      		ldi r20,lo8(73)
 344 0122 50E4      		ldi r21,lo8(64)
 345 0124 0E94 0000 		call __addsf3
 346 0128 21EE      		ldi r18,lo8(-31)
 347 012a 3EE2      		ldi r19,lo8(46)
 348 012c 45E6      		ldi r20,lo8(101)
 349 012e 52E4      		ldi r21,lo8(66)
 350 0130 0E94 0000 		call __mulsf3
 351 0134 0E94 0000 		call __fixsfsi
 352 0138 6B01      		movw r12,r22
 353 013a 7C01      		movw r14,r24
 354 013c 8B01      		movw r16,r22
 355 013e 7B83      		std Y+3,r23
 356 0140 6A83      		std Y+2,r22
  74:LSM303D_ACC_MAG.c ****     _acc_angle->x = (float) (atan2(_acc_raw_->y, _acc_raw_->z) + M_PI) * RAD_TO_DEG;
 358               	.LM24:
 359 0142 2BED      		ldi r18,lo8(-37)
 360 0144 3FE0      		ldi r19,lo8(15)
 361 0146 49E4      		ldi r20,lo8(73)
 362 0148 50E4      		ldi r21,lo8(64)
 363 014a C501      		movw r24,r10
 364 014c B401      		movw r22,r8
 365 014e 0E94 0000 		call __addsf3
 366 0152 21EE      		ldi r18,lo8(-31)
 367 0154 3EE2      		ldi r19,lo8(46)
 368 0156 45E6      		ldi r20,lo8(101)
 369 0158 52E4      		ldi r21,lo8(66)
 370 015a 0E94 0000 		call __mulsf3
 371 015e 0E94 0000 		call __fixsfsi
  76:LSM303D_ACC_MAG.c ****     
  77:LSM303D_ACC_MAG.c ****     _acc_angle->x -= (float) 180.0;
 373               	.LM25:
 374 0162 8827      		clr r24
 375 0164 77FD      		sbrc r23,7
 376 0166 8095      		com r24
 377 0168 982F      		mov r25,r24
 378 016a 0E94 0000 		call __floatsisf
 379 016e 20E0      		ldi r18,0
 380 0170 30E0      		ldi r19,0
 381 0172 44E3      		ldi r20,lo8(52)
 382 0174 53E4      		ldi r21,lo8(67)
 383 0176 0E94 0000 		call __subsf3
 384 017a 0E94 0000 		call __fixsfsi
 385 017e 7983      		std Y+1,r23
 386 0180 6883      		st Y,r22
 387 0182 B601      		movw r22,r12
 388 0184 8827      		clr r24
 389 0186 77FD      		sbrc r23,7
 390 0188 8095      		com r24
 391 018a 982F      		mov r25,r24
  78:LSM303D_ACC_MAG.c ****     if (_acc_angle->y > 90) {
 393               	.LM26:
 394 018c 0B35      		cpi r16,91
 395 018e 1105      		cpc r17,__zero_reg__
 396 0190 04F0      		brlt .L9
  79:LSM303D_ACC_MAG.c ****         _acc_angle->y -= (float) 270;
 398               	.LM27:
 399 0192 0E94 0000 		call __floatsisf
 400 0196 20E0      		ldi r18,0
 401 0198 30E0      		ldi r19,0
 402 019a 47E8      		ldi r20,lo8(-121)
 403 019c 53E4      		ldi r21,lo8(67)
 404 019e 0E94 0000 		call __subsf3
 405 01a2 00C0      		rjmp .L11
 406               	.L9:
  80:LSM303D_ACC_MAG.c ****     } else {
  81:LSM303D_ACC_MAG.c ****         _acc_angle->y += (float) 90;
 408               	.LM28:
 409 01a4 0E94 0000 		call __floatsisf
 410 01a8 20E0      		ldi r18,0
 411 01aa 30E0      		ldi r19,0
 412 01ac 44EB      		ldi r20,lo8(-76)
 413 01ae 52E4      		ldi r21,lo8(66)
 414 01b0 0E94 0000 		call __addsf3
 415               	.L11:
 416 01b4 0E94 0000 		call __fixsfsi
 417 01b8 7B83      		std Y+3,r23
 418 01ba 6A83      		std Y+2,r22
 419               	/* epilogue start */
  82:LSM303D_ACC_MAG.c ****     }
  83:LSM303D_ACC_MAG.c **** 
  84:LSM303D_ACC_MAG.c **** 
  85:LSM303D_ACC_MAG.c **** }/*read_acc_angle*/
 421               	.LM29:
 422 01bc DF91      		pop r29
 423 01be CF91      		pop r28
 424 01c0 1F91      		pop r17
 425 01c2 0F91      		pop r16
 426 01c4 FF90      		pop r15
 427 01c6 EF90      		pop r14
 428 01c8 DF90      		pop r13
 429 01ca CF90      		pop r12
 430 01cc BF90      		pop r11
 431 01ce AF90      		pop r10
 432 01d0 9F90      		pop r9
 433 01d2 8F90      		pop r8
 434 01d4 0895      		ret
 436               	.Lscope4:
 439               	.global	read_mag_raw
 441               	read_mag_raw:
  86:LSM303D_ACC_MAG.c **** 
  87:LSM303D_ACC_MAG.c **** /*************************************************************************
  88:LSM303D_ACC_MAG.c ****  * read_mag_raw values
  89:LSM303D_ACC_MAG.c ****  * 
  90:LSM303D_ACC_MAG.c ****  
  91:LSM303D_ACC_MAG.c ****  *************************************************************************/
  92:LSM303D_ACC_MAG.c **** 
  93:LSM303D_ACC_MAG.c **** void read_mag_raw(struct mag_val_raw *_mag_raw_) {
 443               	.LM30:
 444               	.LFBB5:
 445 01d6 DF92      		push r13
 446 01d8 EF92      		push r14
 447 01da FF92      		push r15
 448 01dc 0F93      		push r16
 449 01de 1F93      		push r17
 450 01e0 CF93      		push r28
 451 01e2 DF93      		push r29
 452               	/* prologue: function */
 453               	/* frame size = 0 */
 454               	/* stack size = 7 */
 455               	.L__stack_usage = 7
 456 01e4 8C01      		movw r16,r24
  94:LSM303D_ACC_MAG.c ****     if (i2c_start(ACC_MAG_SLAVE_ADDRESS << 1) == 0) {
 458               	.LM31:
 459 01e6 8AE3      		ldi r24,lo8(58)
 460 01e8 0E94 0000 		call i2c_start
 461 01ec 8111      		cpse r24,__zero_reg__
 462 01ee 00C0      		rjmp .L12
  95:LSM303D_ACC_MAG.c ****         i2c_write(ACC_MAG_OUT_X_L_M | (1 << 7)); //Auto increment registers by writing the MSB high
 464               	.LM32:
 465 01f0 88E8      		ldi r24,lo8(-120)
 466 01f2 0E94 0000 		call i2c_write
  96:LSM303D_ACC_MAG.c **** 
  97:LSM303D_ACC_MAG.c ****         if (i2c_rep_start(((uint8_t) ACC_MAG_SLAVE_ADDRESS << 1) | 1) == 0) {
 468               	.LM33:
 469 01f6 8BE3      		ldi r24,lo8(59)
 470 01f8 0E94 0000 		call i2c_rep_start
 471 01fc 8111      		cpse r24,__zero_reg__
 472 01fe 00C0      		rjmp .L12
 473               	.LBB3:
  98:LSM303D_ACC_MAG.c ****             uint8_t xlm = i2c_read(ACK);
 475               	.LM34:
 476 0200 0E94 0000 		call i2c_readAck
 477 0204 F82E      		mov r15,r24
  99:LSM303D_ACC_MAG.c ****             uint8_t xhm = i2c_read(ACK);
 479               	.LM35:
 480 0206 0E94 0000 		call i2c_readAck
 481 020a D82E      		mov r13,r24
 100:LSM303D_ACC_MAG.c **** 
 101:LSM303D_ACC_MAG.c ****             uint8_t ylm = i2c_read(ACK);
 483               	.LM36:
 484 020c 0E94 0000 		call i2c_readAck
 485 0210 D82F      		mov r29,r24
 102:LSM303D_ACC_MAG.c ****             uint8_t yhm = i2c_read(ACK);
 487               	.LM37:
 488 0212 0E94 0000 		call i2c_readAck
 489 0216 E82E      		mov r14,r24
 103:LSM303D_ACC_MAG.c **** 
 104:LSM303D_ACC_MAG.c ****             uint8_t zlm = i2c_read(ACK);
 491               	.LM38:
 492 0218 0E94 0000 		call i2c_readAck
 493 021c C82F      		mov r28,r24
 105:LSM303D_ACC_MAG.c ****             uint8_t zhm = i2c_read(NAK);
 495               	.LM39:
 496 021e 0E94 0000 		call i2c_readNak
 106:LSM303D_ACC_MAG.c **** 
 107:LSM303D_ACC_MAG.c ****             _mag_raw_->x = (int16_t) (xhm << 8 | xlm);
 498               	.LM40:
 499 0222 2F2D      		mov r18,r15
 500 0224 30E0      		ldi r19,0
 501 0226 3D29      		or r19,r13
 502 0228 F801      		movw r30,r16
 503 022a 3183      		std Z+1,r19
 504 022c 2083      		st Z,r18
 108:LSM303D_ACC_MAG.c ****             _mag_raw_->y = (int16_t) (yhm << 8 | ylm);
 506               	.LM41:
 507 022e 2D2F      		mov r18,r29
 508 0230 30E0      		ldi r19,0
 509 0232 3E29      		or r19,r14
 510 0234 3383      		std Z+3,r19
 511 0236 2283      		std Z+2,r18
 109:LSM303D_ACC_MAG.c ****             _mag_raw_->z = (int16_t) (zhm << 8 | zlm);
 513               	.LM42:
 514 0238 2C2F      		mov r18,r28
 515 023a 30E0      		ldi r19,0
 516 023c 382B      		or r19,r24
 517 023e 3583      		std Z+5,r19
 518 0240 2483      		std Z+4,r18
 519               	.L12:
 520               	/* epilogue start */
 521               	.LBE3:
 110:LSM303D_ACC_MAG.c **** 
 111:LSM303D_ACC_MAG.c ****         }
 112:LSM303D_ACC_MAG.c ****     }
 113:LSM303D_ACC_MAG.c **** 
 114:LSM303D_ACC_MAG.c **** }/*read_mag_raw*/...
 523               	.LM43:
 524 0242 DF91      		pop r29
 525 0244 CF91      		pop r28
 526 0246 1F91      		pop r17
 527 0248 0F91      		pop r16
 528 024a FF90      		pop r15
 529 024c EF90      		pop r14
 530 024e DF90      		pop r13
 531 0250 0895      		ret
 540               	.Lscope5:
 542               	.Letext0:
 543               		.ident	"GCC: (GNU) 4.9.2 20141224 (prerelease)"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 LSM303D_ACC_MAG.c
     /tmp/ccobRRyq.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccobRRyq.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccobRRyq.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccobRRyq.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccobRRyq.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccobRRyq.s:112    .text:0000000000000000 init_acc
     /tmp/ccobRRyq.s:137    .text:0000000000000014 init_mag
     /tmp/ccobRRyq.s:169    .text:0000000000000032 read_acc_raw
     /tmp/ccobRRyq.s:279    .text:00000000000000ae read_acc_angel
     /tmp/ccobRRyq.s:441    .text:00000000000001d6 read_mag_raw

UNDEFINED SYMBOLS
write_to_reg
i2c_start
i2c_write
i2c_rep_start
i2c_readAck
i2c_readNak
__floatsisf
__addsf3
__mulsf3
__fixsfsi
__subsf3
atan2
